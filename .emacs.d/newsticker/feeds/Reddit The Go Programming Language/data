;; -*- coding: utf-8 -*-
(("The Go Programming Language" "Gophers of the world unite!" nil (23415 209 29526 0) feed 0 nil nil ((category ((term . "golang") (label . "r/golang"))) (updated nil "2018-08-17T17:07:16+00:00") (icon nil "https://www.redditstatic.com/icon.png/") (id nil "/r/golang/.rss?format=xml") (link ((rel . "self") (href . "https://www.reddit.com/r/golang/.rss?format=xml") (type . "application/atom+xml"))) (link ((rel . "alternate") (href . "https://www.reddit.com/r/golang/?format=xml") (type . "text/html"))) (logo nil "https://b.thumbs.redditmedia.com/7BDtSXbohQaPFuaa6oCA5HtE53Flgld6rj3G7-TavDs.png") (subtitle nil "Gophers of the world unite!") (title nil "The Go Programming Language") (entry nil (author nil (name nil "/u/caspervonb") (uri nil "https://www.reddit.com/user/caspervonb")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/caspervonb\"> /u/caspervonb </a> <br/> <span><a href=\"https://medium.com/commitlog/hello-go-3e207da92da0\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97yakn/hello_go/\">[comments]</a></span>") (id nil "t3_97yakn") (link ((href . "https://www.reddit.com/r/golang/comments/97yakn/hello_go/"))) (updated nil "2018-08-17T01:50:39+00:00") (title nil "Hello Go")) (entry nil (author nil (name nil "/u/digitalcraftsman_") (uri nil "https://www.reddit.com/user/digitalcraftsman_")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/digitalcraftsman_\"> /u/digitalcraftsman_ </a> <br/> <span><a href=\"https://gohugo.io/news/0.47-relnotes/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/983w3n/hugo_v047_released_output_minification_livereload/\">[comments]</a></span>") (id nil "t3_983w3n") (link ((href . "https://www.reddit.com/r/golang/comments/983w3n/hugo_v047_released_output_minification_livereload/"))) (updated nil "2018-08-17T16:49:57+00:00") (title nil "Hugo v0.47 released: Output Minification, Live-Reload Fixes and More")) (entry nil (author nil (name nil "/u/IllegalThoughts") (uri nil "https://www.reddit.com/user/IllegalThoughts")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "<!-- SC_OFF --><div class=\"md\"><p>I&#39;m trying to switch to this lib: <a href=\"https://github.com/gobwas/ws\">https://github.com/gobwas/ws</a> (currently using gorilla) because some of the websocket messages are too big and it bogs down the system with 50+ clients (9/10 messages are 100 bytes... and then we get a large one of 4k - 8k bytes, 1 message every 100msec or 10/second).</p> <p>Anyway, this is all rendered on a webpage which is why I&#39;ve got the server serving up HTTP pages. </p> <p>From the gobwas websocket library, it shows there&#39;s a zero copy upgrade to the ws protocol over TCP. It makes sense to me conceptually that there will be less bloat etc when connecting this way. But when I try to connect via the client (browser), it fails. So I&#39;m wondering if it&#39;s feasible for the Go server to be listening on both HTTP + a separate TCP connection? </p> <p>It&#39;s also possible my connection is failing because I&#39;m not using proper headers to connect a browser to a raw TCP connection?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/IllegalThoughts\"> /u/IllegalThoughts </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/982sey/simple_noob_question_regarding_websockets_can_my/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/982sey/simple_noob_question_regarding_websockets_can_my/\">[comments]</a></span>") (id nil "t3_982sey") (link ((href . "https://www.reddit.com/r/golang/comments/982sey/simple_noob_question_regarding_websockets_can_my/"))) (updated nil "2018-08-17T14:38:04+00:00") (title nil "Simple noob question regarding websockets: can my server listen on a TCP connection while simultaneously hosting/listening to an HTTP server?")) (entry nil (author nil (name nil "/u/maximch") (uri nil "https://www.reddit.com/user/maximch")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/maximch\"> /u/maximch </a> <br/> <span><a href=\"https://github.com/hexdigest/gounit-vim\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/980wjc/vim_plugin_for_generating_go_tests_using_your_own/\">[comments]</a></span>") (id nil "t3_980wjc") (link ((href . "https://www.reddit.com/r/golang/comments/980wjc/vim_plugin_for_generating_go_tests_using_your_own/"))) (updated nil "2018-08-17T09:40:55+00:00") (title nil "Vim plugin for generating Go tests using your own templates")) (entry nil (author nil (name nil "/u/schlenderer") (uri nil "https://www.reddit.com/user/schlenderer")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "<!-- SC_OFF --><div class=\"md\"><p>Hi, I need some alpha testers in the UK to testdrive <a href=\"https://github.com/mswift42/nip\">nip</a>, a cli program to search for and download BBC iplayer tv programmes.</p> <p>Windows and Mac users are especially welcome, because I only have linux systems to test on.</p> <p>Thank you in advance.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/schlenderer\"> /u/schlenderer </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/982qz3/uk_based_alpha_tester_needed/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/982qz3/uk_based_alpha_tester_needed/\">[comments]</a></span>") (id nil "t3_982qz3") (link ((href . "https://www.reddit.com/r/golang/comments/982qz3/uk_based_alpha_tester_needed/"))) (updated nil "2018-08-17T14:32:59+00:00") (title nil "UK based Alpha Tester needed!")) (entry nil (author nil (name nil "/u/quiI") (uri nil "https://www.reddit.com/user/quiI")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/quiI\"> /u/quiI </a> <br/> <span><a href=\"https://quii.gitbook.io/learn-go-with-tests/build-an-application/command-line\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97uibp/learn_go_with_tests_command_line_and_package/\">[comments]</a></span>") (id nil "t3_97uibp") (link ((href . "https://www.reddit.com/r/golang/comments/97uibp/learn_go_with_tests_command_line_and_package/"))) (updated nil "2018-08-16T17:51:55+00:00") (title nil "Learn Go with tests - Command line and package structure")) (entry nil (author nil (name nil "/u/stanislavb") (uri nil "https://www.reddit.com/user/stanislavb")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/stanislavb\"> /u/stanislavb </a> <br/> <span><a href=\"https://go.libhunt.com/newsletter/117\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97xwc7/awesome_go_newsletter_issue_117/\">[comments]</a></span>") (id nil "t3_97xwc7") (link ((href . "https://www.reddit.com/r/golang/comments/97xwc7/awesome_go_newsletter_issue_117/"))) (updated nil "2018-08-17T00:53:05+00:00") (title nil "Awesome Go Newsletter - Issue 117")) (entry nil (author nil (name nil "/u/TheShyro") (uri nil "https://www.reddit.com/user/TheShyro")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "<!-- SC_OFF --><div class=\"md\"><p>Coming mostly from a Java background I&#39;m wondering what other languages have built in channels.</p> <p>Obviously they could be implemented in any/most languages but I&#39;m thinking more in the special keyword type of sense.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/TheShyro\"> /u/TheShyro </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/97v3r1/other_programming_languages_with_channels/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97v3r1/other_programming_languages_with_channels/\">[comments]</a></span>") (id nil "t3_97v3r1") (link ((href . "https://www.reddit.com/r/golang/comments/97v3r1/other_programming_languages_with_channels/"))) (updated nil "2018-08-16T18:59:49+00:00") (title nil "Other programming languages with channels?")) (entry nil (author nil (name nil "/u/mfrw1") (uri nil "https://www.reddit.com/user/mfrw1")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/mfrw1\"> /u/mfrw1 </a> <br/> <span><a href=\"https://talks.godoc.org/github.com/mvdan/talks/2018/go1.11.slide#1\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97qdl8/what_else_is_in_go_111/\">[comments]</a></span>") (id nil "t3_97qdl8") (link ((href . "https://www.reddit.com/r/golang/comments/97qdl8/what_else_is_in_go_111/"))) (updated nil "2018-08-16T07:59:06+00:00") (title nil "What else is in go 1.11 ?")) (entry nil (author nil (name nil "/u/prvst") (uri nil "https://www.reddit.com/user/prvst")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "<!-- SC_OFF --><div class=\"md\"><p>I&#39;m currently working on a program that orchestrate the execution of other binaries, the program has to access different folders and once there, launch a different binary on the files there, wait for the process to finish and then move on (no output besides the creation of other files). The problem that I&#39;m having is that these other binaries take some time, but they consume almost no cpu / mem resources.</p> <p>What I want to do is to make their execution parallel, so then all folders can be processed at the same time, reducing my waiting time.</p> <p>I&#39;m not an expert on concurrency so I tried to find any examples on the Internet but had found none so far. I would appreciate any insights into that. My only restriction for this case is that for my program to resume its processing, it needs to wait for all threads to finish their processing before moving on, so if it runs 20 threads that will execute a binary on 20 different folders, it needs to wait for all 20 to finish.</p> <p>I would post here some snippets but I truly have found none so far that could be similar to what Im trying to do.</p> <p>Thanks</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/prvst\"> /u/prvst </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/97vvpk/concurrentparallel_binary_execution_from_go/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97vvpk/concurrentparallel_binary_execution_from_go/\">[comments]</a></span>") (id nil "t3_97vvpk") (link ((href . "https://www.reddit.com/r/golang/comments/97vvpk/concurrentparallel_binary_execution_from_go/"))) (updated nil "2018-08-16T20:29:45+00:00") (title nil "Concurrent/Parallel binary execution from GO program")) (entry nil (author nil (name nil "/u/problame") (uri nil "https://www.reddit.com/user/problame")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "<!-- SC_OFF --><div class=\"md\"><p>Since Go 1.4, we have <a href=\"https://golang.org/doc/go1.4#internalpackages\">internal packages</a> to encapsulate application functionality into subpackages without having them become part of the officially exported interface.</p> <p>I use this functionality in my app to encapsulate data structures from the packages that use them in order to enforce that only the data structure&#39;s exported interface is used by the main package.</p> <p>However, I recently introduced package context to pass an instance of a logger from the main package to the internal subpackage. The subpackage thus needs to import the main package in order to get the context key of the logger, thereby creating an import cycle.</p> <p>I sketched the situation here: <a href=\"https://www.lucidchart.com/invitations/accept/08863757-14e3-4ed2-92ab-4b5106380e29\">https://www.lucidchart.com/invitations/accept/08863757-14e3-4ed2-92ab-4b5106380e29</a></p> <p>My current solution is to move the context stuff into a separate package that is both imported by the main package and the internal package. However, <em>setting</em> the logger is the job of the main package&#39;s consumers, and thus, those will also need to import the third package, which I find ugly.</p> <p>Any suggestions on how to improve this?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/problame\"> /u/problame </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/97wcso/internal_packages_avoiding_import_cycles/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97wcso/internal_packages_avoiding_import_cycles/\">[comments]</a></span>") (id nil "t3_97wcso") (link ((href . "https://www.reddit.com/r/golang/comments/97wcso/internal_packages_avoiding_import_cycles/"))) (updated nil "2018-08-16T21:28:00+00:00") (title nil "Internal packages & avoiding import cycles")) (entry nil (author nil (name nil "/u/svalasek") (uri nil "https://www.reddit.com/user/svalasek")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "<!-- SC_OFF --><div class=\"md\"><p>I would be interested in your code review. Plan is to split the app into cobra based command line tool and rajce-get library. Source is available here - <a href=\"https://github.com/valasek/rajce-get\">https://github.com/valasek/rajce-get</a>. Thank you for your inputs and suggestions.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/svalasek\"> /u/svalasek </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/97ww13/code_review_request/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97ww13/code_review_request/\">[comments]</a></span>") (id nil "t3_97ww13") (link ((href . "https://www.reddit.com/r/golang/comments/97ww13/code_review_request/"))) (updated nil "2018-08-16T22:36:08+00:00") (title nil "Code review request")) (entry nil (author nil (name nil "/u/adsbx-james") (uri nil "https://www.reddit.com/user/adsbx-james")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "<!-- SC_OFF --><div class=\"md\"><p>Hi <a href=\"/r/golang\">r/golang</a>!</p> <p>My name is James one of the two main guys at ADSBx. I&#39;m also very new to Go and trying to consume a JSON stream over TCP from <strong>pub-vrs.adsbexchange.com</strong> port 30005. I have some nodejs experience but nothing complex, a little pub-sub and messaging applications.</p> <p><a href=\"https://adsbexchange.com/data/\">https://adsbexchange.com/data/</a></p> <p>I&#39;ve played around building some TCP relay servers using Go examples. I tried to use socat or netcat to pipe the pub-vrs JSON stream to the Go tcp relay so they would rebroadcast them to connected clients. It didn&#39;t work. I&#39;m missing something obvious and I don&#39;t know what.</p> <p>I know the way I&#39;m doing it is obviously a hack and terrible, but I&#39;m trying to learn more and more Go and diving in writing terrible code seemed the best way to learn how not to use Go. ... ugh ..</p> <p>Can anyone give me some pointers? Am I even close to correctly approaching this with Go?</p> <ol> <li>consume the pub-vrs feeds into a read buffer</li> <li>when a client connects I want to send the current read buffer to them and all the connected clients</li> <li>every time the pub-vrs sends new JSON I want to refresh the read buffer and send it to all the clients? Or do I create a new read buffer?</li> </ol> <p>If this server is 20 lines of code and I&#39;m too big of a dolt to get it, please forgive me! </p> <p>Non-working thingy .. in Go</p> <p><a href=\"https://play.golang.org/p/EECzdF-44ga\">https://play.golang.org/p/EECzdF-44ga</a> </p> <p>&lt;/ begin shameless plug &gt;</p> <p>About ADSBx:</p> <p><a href=\"https://adsbexchange.com/\">https://adsbexchange.com/</a></p> <p>At ADSBx we are trying to build a version of dump1090 in Go, that can act as a fast efficient ingest server for the ADSBx project. <a href=\"https://github.com/mutability/dump1090\">https://github.com/mutability/dump1090</a></p> <p>ADSBx is all volunteers and the only ADS-B enthusiast site that tracks everything, no filtering, no blocking, and makes all the data available back to the feeders, researchers, students - basically anyone who can&#39;t afford $100k a month from the current ADS-B sources or who can use aircraft tracking data from the block list or who are paying FA, FR24,et all to have aircraft&#39;hidden&#39; from public view.</p> <p>ADSBx supports multiple non-profit organizations with ADS-B tracking data so they can complete their missions.</p> <p>If anyone is looking for a challenging Go project, we need volunteers!</p> <p>&lt;/ end shameless plug &gt;</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/adsbx-james\"> /u/adsbx-james </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/97zq9t/tcp_to_go_server_to_send_tcp_stream_to_many/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97zq9t/tcp_to_go_server_to_send_tcp_stream_to_many/\">[comments]</a></span>") (id nil "t3_97zq9t") (link ((href . "https://www.reddit.com/r/golang/comments/97zq9t/tcp_to_go_server_to_send_tcp_stream_to_many/"))) (updated nil "2018-08-17T05:43:02+00:00") (title nil "TCP to Go server to send TCP stream to many clients")) (entry nil (author nil (name nil "/u/Ribice") (uri nil "https://www.reddit.com/user/Ribice")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Ribice\"> /u/Ribice </a> <br/> <span><a href=\"https://github.com/ribice/twisk\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97s5bm/rpc_starter_kit_with_twirp/\">[comments]</a></span>") (id nil "t3_97s5bm") (link ((href . "https://www.reddit.com/r/golang/comments/97s5bm/rpc_starter_kit_with_twirp/"))) (updated nil "2018-08-16T13:10:52+00:00") (title nil "RPC starter kit with Twirp")) (entry nil (author nil (name nil "/u/Happycodeine") (uri nil "https://www.reddit.com/user/Happycodeine")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Happycodeine\"> /u/Happycodeine </a> <br/> <span><a href=\"https://medium.com/@sergimansilla/refactoring-in-go-goroutine-concurrency-fccbe7093c04\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97rsfx/refactoring_in_go_goroutine_concurrency/\">[comments]</a></span>") (id nil "t3_97rsfx") (link ((href . "https://www.reddit.com/r/golang/comments/97rsfx/refactoring_in_go_goroutine_concurrency/"))) (updated nil "2018-08-16T12:20:08+00:00") (title nil "Refactoring in Go: goroutine concurrency")) (entry nil (author nil (name nil "/u/prabaprakash") (uri nil "https://www.reddit.com/user/prabaprakash")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/prabaprakash\"> /u/prabaprakash </a> <br/> <span><a href=\"https://i.redd.it/iwz5cj5ftig11.png\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97w7iy/pluralsight_downloader_in_golang/\">[comments]</a></span>") (id nil "t3_97w7iy") (link ((href . "https://www.reddit.com/r/golang/comments/97w7iy/pluralsight_downloader_in_golang/"))) (updated nil "2018-08-16T21:09:59+00:00") (title nil "Pluralsight Downloader in GoLang")) (entry nil (author nil (name nil "/u/space_mercxry") (uri nil "https://www.reddit.com/user/space_mercxry")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "<!-- SC_OFF --><div class=\"md\"><p>Hello, I&#39;m a back-end developer that is building a startup, the back-end language that I&#39;m using is Node.js with the Expressjs framework.<br/> I don&#39;t have problems so far but I&#39;m curious and I want to know the alternatives, I would like to try something in Golang (that&#39;s why I&#39;m here), but I can&#39;t choose a good web framework to build a REST API, I asked some friends about this and some of them say mux, others gin and others say http go module, I would really like to know the differences (pros and cons), taking into consideration that should be production ready.<br/> I don&#39;t need something that feels similiar to expressjs I can learn something new, and I&#39;m open to something that is not Mux, Gin, and HTTP if contains an explanation. </p> <p>Thanks for the time :)</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/space_mercxry\"> /u/space_mercxry </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/97p61b/choosing_a_golang_web_framework/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97p61b/choosing_a_golang_web_framework/\">[comments]</a></span>") (id nil "t3_97p61b") (link ((href . "https://www.reddit.com/r/golang/comments/97p61b/choosing_a_golang_web_framework/"))) (updated nil "2018-08-16T04:19:05+00:00") (title nil "Choosing a Golang Web Framework")) (entry nil (author nil (name nil "/u/hansoloburgerz") (uri nil "https://www.reddit.com/user/hansoloburgerz")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "<!-- SC_OFF --><div class=\"md\"><p>Hello,</p> <p>Really new with Go, trying to create a function that will grab a list of files and zip them up. Googled for a while today, i can easily archive files, but it also creates a folder inside the archive (which, for stupid reasons i don&#39;t want to get into, won&#39;t work). I basically need to take all the files in a directory, zip them with no folder structure, and that&#39;s it. Here is kinda what i&#39;m working with:</p> <pre><code>package main import ( &quot;archive/zip&quot; &quot;os&quot; &quot;path/filepath&quot; &quot;strings&quot; &quot;io&quot; ) func zipit(source, target string) error { zipfile, err := os.Create(target) if err != nil { return err } defer zipfile.Close() archive := zip.NewWriter(zipfile) defer archive.Close() info, err := os.Stat(source) if err != nil { return nil } var baseDir string if info.IsDir() { baseDir = filepath.Base(source) } filepath.Walk(source, func(path string, info os.FileInfo, err error) error { if err != nil { return err } header, err := zip.FileInfoHeader(info) if err != nil { return err } if baseDir != &quot;&quot; { header.Name = filepath.Join(baseDir, strings.TrimPrefix(path, source)) } if info.IsDir() { header.Name += &quot;/&quot; } else { header.Method = zip.Deflate } writer, err := archive.CreateHeader(header) if err != nil { return err } if info.IsDir() { return nil } file, err := os.Open(path) if err != nil { return err } defer file.Close() _, err = io.Copy(writer, file) return err }) return err } func main() { zipit(&quot;output/&quot;,&quot;ABG_Gather_Data.zip&quot;) } </code></pre> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/hansoloburgerz\"> /u/hansoloburgerz </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/97uhkh/trying_to_zip_some_files_without_creating_a/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97uhkh/trying_to_zip_some_files_without_creating_a/\">[comments]</a></span>") (id nil "t3_97uhkh") (link ((href . "https://www.reddit.com/r/golang/comments/97uhkh/trying_to_zip_some_files_without_creating_a/"))) (updated nil "2018-08-16T17:49:24+00:00") (title nil "Trying to zip some files without creating a folder inside the archive")) (entry nil (author nil (name nil "/u/xerxes3117") (uri nil "https://www.reddit.com/user/xerxes3117")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "<!-- SC_OFF --><div class=\"md\"><p>Are these 2 courses from udemy (same instructor) good for learning golang as a beginner?</p> <p>I know there must a lot of good books to learn golang but i just prefer video tutorials.</p> <p><a href=\"https://www.udemy.com/learn-how-to-code/\">course 1</a></p> <p><a href=\"https://www.udemy.com/go-programming-language/\">course 2</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/xerxes3117\"> /u/xerxes3117 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/97lw54/todd_mcleods_tutorials_on_udemy_review/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97lw54/todd_mcleods_tutorials_on_udemy_review/\">[comments]</a></span>") (id nil "t3_97lw54") (link ((href . "https://www.reddit.com/r/golang/comments/97lw54/todd_mcleods_tutorials_on_udemy_review/"))) (updated nil "2018-08-15T20:47:25+00:00") (title nil "Todd Mcleod's tutorials on Udemy review")) (entry nil (author nil (name nil "/u/coolaj86") (uri nil "https://www.reddit.com/user/coolaj86")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/coolaj86\"> /u/coolaj86 </a> <br/> <span><a href=\"https://telebit.cloud/sclient/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97nai4/sclient_a_poor_mans_or_windows_users_ssl/\">[comments]</a></span>") (id nil "t3_97nai4") (link ((href . "https://www.reddit.com/r/golang/comments/97nai4/sclient_a_poor_mans_or_windows_users_ssl/"))) (updated nil "2018-08-15T23:46:29+00:00") (title nil "sclient - a poor man's (or Windows user's) ssl unwrapper - alternative to openssl s_client, stunnel, socat")) (entry nil (author nil (name nil "/u/rodaine") (uri nil "https://www.reddit.com/user/rodaine")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/rodaine\"> /u/rodaine </a> <br/> <span><a href=\"https://rodaine.com/2018/08/x-files-sync-golang/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97jqox/the_xfiles_avoiding_concurrency_boilerplate_with/\">[comments]</a></span>") (id nil "t3_97jqox") (link ((href . "https://www.reddit.com/r/golang/comments/97jqox/the_xfiles_avoiding_concurrency_boilerplate_with/"))) (updated nil "2018-08-15T16:32:49+00:00") (title nil "The X-Files: Avoiding Concurrency Boilerplate With golang.org/x/sync")) (entry nil (author nil (name nil "/u/speckz") (uri nil "https://www.reddit.com/user/speckz")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/speckz\"> /u/speckz </a> <br/> <span><a href=\"https://utcc.utoronto.ca/~cks/space/blog/programming/GoNetErrorsUndocumented\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97hqsz/gos_net_package_doesnt_have_opaque_errors_just/\">[comments]</a></span>") (id nil "t3_97hqsz") (link ((href . "https://www.reddit.com/r/golang/comments/97hqsz/gos_net_package_doesnt_have_opaque_errors_just/"))) (updated nil "2018-08-15T12:16:03+00:00") (title nil "Go's net package doesn't have opaque errors, just undocumented ones")) (entry nil (author nil (name nil "/u/vagmi") (uri nil "https://www.reddit.com/user/vagmi")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/vagmi\"> /u/vagmi </a> <br/> <span><a href=\"https://medium.com/tarkalabs/thinking-in-go-c5d5ceec67a2\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97pmom/talk_thinking_in_go/\">[comments]</a></span>") (id nil "t3_97pmom") (link ((href . "https://www.reddit.com/r/golang/comments/97pmom/talk_thinking_in_go/"))) (updated nil "2018-08-16T05:37:54+00:00") (title nil "[Talk] - Thinking in Go")) (entry nil (author nil (name nil "/u/thomac") (uri nil "https://www.reddit.com/user/thomac")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "<!-- SC_OFF --><div class=\"md\"><p>Go lacking union types, could someone please show me how to approach the following problem?</p> <p>I have three shapes: circle, triangle, square and would like to get some information on each of them. Each has `info` method but I would like it to be private and have a public `Info` function which accepts each shape and calls the private method behind the scenes. So, instead of `<a href=\"https://myTriangle.Info\">myTriangle.Info</a>()`, I would like to type `Info(myTriangle)`. In C, I would simply crate a `Shape` union type accepting all three shapes and then have a function `Info` which accepts the `Shape` type. Is something like this possible in Go? The closest thing I could find is to have an empty interface and then using reflection switch-case to each particular kind but I would like to not loose compile-time type checks.</p> <p>PS: The shapes examples is intentionally contrived to illustrate the problem I have.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/thomac\"> /u/thomac </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/97q3dt/union_alternative/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97q3dt/union_alternative/\">[comments]</a></span>") (id nil "t3_97q3dt") (link ((href . "https://www.reddit.com/r/golang/comments/97q3dt/union_alternative/"))) (updated nil "2018-08-16T07:04:23+00:00") (title nil "Union alternative")) (entry nil (author nil (name nil "/u/seiflotfy") (uri nil "https://www.reddit.com/user/seiflotfy")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/seiflotfy\"> /u/seiflotfy </a> <br/> <span><a href=\"https://github.com/axiomhq/quantiles\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97ilnx/a_go_implementation_of_tensorflows_streaming/\">[comments]</a></span>") (id nil "t3_97ilnx") (link ((href . "https://www.reddit.com/r/golang/comments/97ilnx/a_go_implementation_of_tensorflows_streaming/"))) (updated nil "2018-08-15T14:18:10+00:00") (title nil "A Go implementation of TensorFlow's streaming quantiles estimator (pretty fast)")))) ("Hello Go" "submitted by   <a href=\"https://www.reddit.com/user/caspervonb\"> /u/caspervonb </a> <br/> <span><a href=\"https://medium.com/commitlog/hello-go-3e207da92da0\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/97yakn/hello_go/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/97yakn/hello_go/" (23414 10735) old 1 nil nil ((guid nil "t3_97yakn") (author nil (name nil "/u/caspervonb") (uri nil "https://www.reddit.com/user/caspervonb")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/caspervonb\"> /u/caspervonb </a> <br/> <span><a href=\"https://medium.com/commitlog/hello-go-3e207da92da0\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97yakn/hello_go/\">[comments]</a></span>") (id nil "t3_97yakn") (link ((href . "https://www.reddit.com/r/golang/comments/97yakn/hello_go/"))) (updated nil "2018-08-17T01:50:39+00:00") (title nil "Hello Go"))) ("Hugo v0.47 released: Output Minification, Live-Reload Fixes and More" "submitted by   <a href=\"https://www.reddit.com/user/digitalcraftsman_\"> /u/digitalcraftsman_ </a> <br/> <span><a href=\"https://gohugo.io/news/0.47-relnotes/\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/983w3n/hugo_v047_released_output_minification_livereload/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/983w3n/hugo_v047_released_output_minification_livereload/" (23414 64693) old 2 nil nil ((guid nil "t3_983w3n") (author nil (name nil "/u/digitalcraftsman_") (uri nil "https://www.reddit.com/user/digitalcraftsman_")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/digitalcraftsman_\"> /u/digitalcraftsman_ </a> <br/> <span><a href=\"https://gohugo.io/news/0.47-relnotes/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/983w3n/hugo_v047_released_output_minification_livereload/\">[comments]</a></span>") (id nil "t3_983w3n") (link ((href . "https://www.reddit.com/r/golang/comments/983w3n/hugo_v047_released_output_minification_livereload/"))) (updated nil "2018-08-17T16:49:57+00:00") (title nil "Hugo v0.47 released: Output Minification, Live-Reload Fixes and More"))) ("Simple noob question regarding websockets: can my server listen on a TCP connection while simultaneously hosting/listening to an HTTP server?" "<!-- SC_OFF --><div class=\"md\"><p>I'm trying to switch to this lib: <a href=\"https://github.com/gobwas/ws\">https://github.com/gobwas/ws</a> (currently using gorilla) because some of the websocket messages are too big and it bogs down the system with 50+ clients (9/10 messages are 100 bytes... and then we get a large one of 4k - 8k bytes, 1 message every 100msec or 10/second).</p> <p>Anyway, this is all rendered on a webpage which is why I've got the server serving up HTTP pages. </p> <p>From the gobwas websocket library, it shows there's a zero copy upgrade to the ws protocol over TCP. It makes sense to me conceptually that there will be less bloat etc when connecting this way. But when I try to connect via the client (browser), it fails. So I'm wondering if it's feasible for the Go server to be listening on both HTTP + a separate TCP connection? </p> <p>It's also possible my connection is failing because I'm not using proper headers to connect a browser to a raw TCP connection?</p> </div><!-- SC_ON -->   submitted by   <a href=\"https://www.reddit.com/user/IllegalThoughts\"> /u/IllegalThoughts </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/982sey/simple_noob_question_regarding_websockets_can_my/\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/982sey/simple_noob_question_regarding_websockets_can_my/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/982sey/simple_noob_question_regarding_websockets_can_my/" (23414 56780) old 3 nil nil ((guid nil "t3_982sey") (author nil (name nil "/u/IllegalThoughts") (uri nil "https://www.reddit.com/user/IllegalThoughts")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "<!-- SC_OFF --><div class=\"md\"><p>I&#39;m trying to switch to this lib: <a href=\"https://github.com/gobwas/ws\">https://github.com/gobwas/ws</a> (currently using gorilla) because some of the websocket messages are too big and it bogs down the system with 50+ clients (9/10 messages are 100 bytes... and then we get a large one of 4k - 8k bytes, 1 message every 100msec or 10/second).</p> <p>Anyway, this is all rendered on a webpage which is why I&#39;ve got the server serving up HTTP pages. </p> <p>From the gobwas websocket library, it shows there&#39;s a zero copy upgrade to the ws protocol over TCP. It makes sense to me conceptually that there will be less bloat etc when connecting this way. But when I try to connect via the client (browser), it fails. So I&#39;m wondering if it&#39;s feasible for the Go server to be listening on both HTTP + a separate TCP connection? </p> <p>It&#39;s also possible my connection is failing because I&#39;m not using proper headers to connect a browser to a raw TCP connection?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/IllegalThoughts\"> /u/IllegalThoughts </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/982sey/simple_noob_question_regarding_websockets_can_my/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/982sey/simple_noob_question_regarding_websockets_can_my/\">[comments]</a></span>") (id nil "t3_982sey") (link ((href . "https://www.reddit.com/r/golang/comments/982sey/simple_noob_question_regarding_websockets_can_my/"))) (updated nil "2018-08-17T14:38:04+00:00") (title nil "Simple noob question regarding websockets: can my server listen on a TCP connection while simultaneously hosting/listening to an HTTP server?"))) ("Vim plugin for generating Go tests using your own templates" "submitted by   <a href=\"https://www.reddit.com/user/maximch\"> /u/maximch </a> <br/> <span><a href=\"https://github.com/hexdigest/gounit-vim\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/980wjc/vim_plugin_for_generating_go_tests_using_your_own/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/980wjc/vim_plugin_for_generating_go_tests_using_your_own/" (23414 38951) old 4 nil nil ((guid nil "t3_980wjc") (author nil (name nil "/u/maximch") (uri nil "https://www.reddit.com/user/maximch")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/maximch\"> /u/maximch </a> <br/> <span><a href=\"https://github.com/hexdigest/gounit-vim\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/980wjc/vim_plugin_for_generating_go_tests_using_your_own/\">[comments]</a></span>") (id nil "t3_980wjc") (link ((href . "https://www.reddit.com/r/golang/comments/980wjc/vim_plugin_for_generating_go_tests_using_your_own/"))) (updated nil "2018-08-17T09:40:55+00:00") (title nil "Vim plugin for generating Go tests using your own templates"))) ("UK based Alpha Tester needed!" "<!-- SC_OFF --><div class=\"md\"><p>Hi, I need some alpha testers in the UK to testdrive <a href=\"https://github.com/mswift42/nip\">nip</a>, a cli program to search for and download BBC iplayer tv programmes.</p> <p>Windows and Mac users are especially welcome, because I only have linux systems to test on.</p> <p>Thank you in advance.</p> </div><!-- SC_ON -->   submitted by   <a href=\"https://www.reddit.com/user/schlenderer\"> /u/schlenderer </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/982qz3/uk_based_alpha_tester_needed/\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/982qz3/uk_based_alpha_tester_needed/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/982qz3/uk_based_alpha_tester_needed/" (23414 56475) old 5 nil nil ((guid nil "t3_982qz3") (author nil (name nil "/u/schlenderer") (uri nil "https://www.reddit.com/user/schlenderer")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "<!-- SC_OFF --><div class=\"md\"><p>Hi, I need some alpha testers in the UK to testdrive <a href=\"https://github.com/mswift42/nip\">nip</a>, a cli program to search for and download BBC iplayer tv programmes.</p> <p>Windows and Mac users are especially welcome, because I only have linux systems to test on.</p> <p>Thank you in advance.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/schlenderer\"> /u/schlenderer </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/982qz3/uk_based_alpha_tester_needed/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/982qz3/uk_based_alpha_tester_needed/\">[comments]</a></span>") (id nil "t3_982qz3") (link ((href . "https://www.reddit.com/r/golang/comments/982qz3/uk_based_alpha_tester_needed/"))) (updated nil "2018-08-17T14:32:59+00:00") (title nil "UK based Alpha Tester needed!"))) ("Learn Go with tests - Command line and package structure" "submitted by   <a href=\"https://www.reddit.com/user/quiI\"> /u/quiI </a> <br/> <span><a href=\"https://quii.gitbook.io/learn-go-with-tests/build-an-application/command-line\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/97uibp/learn_go_with_tests_command_line_and_package/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/97uibp/learn_go_with_tests_command_line_and_package/" (23413 47547) old 6 nil nil ((guid nil "t3_97uibp") (author nil (name nil "/u/quiI") (uri nil "https://www.reddit.com/user/quiI")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/quiI\"> /u/quiI </a> <br/> <span><a href=\"https://quii.gitbook.io/learn-go-with-tests/build-an-application/command-line\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97uibp/learn_go_with_tests_command_line_and_package/\">[comments]</a></span>") (id nil "t3_97uibp") (link ((href . "https://www.reddit.com/r/golang/comments/97uibp/learn_go_with_tests_command_line_and_package/"))) (updated nil "2018-08-16T17:51:55+00:00") (title nil "Learn Go with tests - Command line and package structure"))) ("Awesome Go Newsletter - Issue 117" "submitted by   <a href=\"https://www.reddit.com/user/stanislavb\"> /u/stanislavb </a> <br/> <span><a href=\"https://go.libhunt.com/newsletter/117\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/97xwc7/awesome_go_newsletter_issue_117/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/97xwc7/awesome_go_newsletter_issue_117/" (23414 7281) old 7 nil nil ((guid nil "t3_97xwc7") (author nil (name nil "/u/stanislavb") (uri nil "https://www.reddit.com/user/stanislavb")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/stanislavb\"> /u/stanislavb </a> <br/> <span><a href=\"https://go.libhunt.com/newsletter/117\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97xwc7/awesome_go_newsletter_issue_117/\">[comments]</a></span>") (id nil "t3_97xwc7") (link ((href . "https://www.reddit.com/r/golang/comments/97xwc7/awesome_go_newsletter_issue_117/"))) (updated nil "2018-08-17T00:53:05+00:00") (title nil "Awesome Go Newsletter - Issue 117"))) ("Other programming languages with channels?" "<!-- SC_OFF --><div class=\"md\"><p>Coming mostly from a Java background I'm wondering what other languages have built in channels.</p> <p>Obviously they could be implemented in any/most languages but I'm thinking more in the special keyword type of sense.</p> </div><!-- SC_ON -->   submitted by   <a href=\"https://www.reddit.com/user/TheShyro\"> /u/TheShyro </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/97v3r1/other_programming_languages_with_channels/\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/97v3r1/other_programming_languages_with_channels/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/97v3r1/other_programming_languages_with_channels/" (23413 51621) old 8 nil nil ((guid nil "t3_97v3r1") (author nil (name nil "/u/TheShyro") (uri nil "https://www.reddit.com/user/TheShyro")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "<!-- SC_OFF --><div class=\"md\"><p>Coming mostly from a Java background I&#39;m wondering what other languages have built in channels.</p> <p>Obviously they could be implemented in any/most languages but I&#39;m thinking more in the special keyword type of sense.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/TheShyro\"> /u/TheShyro </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/97v3r1/other_programming_languages_with_channels/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97v3r1/other_programming_languages_with_channels/\">[comments]</a></span>") (id nil "t3_97v3r1") (link ((href . "https://www.reddit.com/r/golang/comments/97v3r1/other_programming_languages_with_channels/"))) (updated nil "2018-08-16T18:59:49+00:00") (title nil "Other programming languages with channels?"))) ("What else is in go 1.11 ?" "submitted by   <a href=\"https://www.reddit.com/user/mfrw1\"> /u/mfrw1 </a> <br/> <span><a href=\"https://talks.godoc.org/github.com/mvdan/talks/2018/go1.11.slide#1\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/97qdl8/what_else_is_in_go_111/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/97qdl8/what_else_is_in_go_111/" (23413 11978) old 9 nil nil ((guid nil "t3_97qdl8") (author nil (name nil "/u/mfrw1") (uri nil "https://www.reddit.com/user/mfrw1")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/mfrw1\"> /u/mfrw1 </a> <br/> <span><a href=\"https://talks.godoc.org/github.com/mvdan/talks/2018/go1.11.slide#1\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97qdl8/what_else_is_in_go_111/\">[comments]</a></span>") (id nil "t3_97qdl8") (link ((href . "https://www.reddit.com/r/golang/comments/97qdl8/what_else_is_in_go_111/"))) (updated nil "2018-08-16T07:59:06+00:00") (title nil "What else is in go 1.11 ?"))) ("Concurrent/Parallel binary execution from GO program" "<!-- SC_OFF --><div class=\"md\"><p>I'm currently working on a program that orchestrate the execution of other binaries, the program has to access different folders and once there, launch a different binary on the files there, wait for the process to finish and then move on (no output besides the creation of other files). The problem that I'm having is that these other binaries take some time, but they consume almost no cpu / mem resources.</p> <p>What I want to do is to make their execution parallel, so then all folders can be processed at the same time, reducing my waiting time.</p> <p>I'm not an expert on concurrency so I tried to find any examples on the Internet but had found none so far. I would appreciate any insights into that. My only restriction for this case is that for my program to resume its processing, it needs to wait for all threads to finish their processing before moving on, so if it runs 20 threads that will execute a binary on 20 different folders, it needs to wait for all 20 to finish.</p> <p>I would post here some snippets but I truly have found none so far that could be similar to what Im trying to do.</p> <p>Thanks</p> </div><!-- SC_ON -->   submitted by   <a href=\"https://www.reddit.com/user/prvst\"> /u/prvst </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/97vvpk/concurrentparallel_binary_execution_from_go/\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/97vvpk/concurrentparallel_binary_execution_from_go/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/97vvpk/concurrentparallel_binary_execution_from_go/" (23413 57017) old 10 nil nil ((guid nil "t3_97vvpk") (author nil (name nil "/u/prvst") (uri nil "https://www.reddit.com/user/prvst")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "<!-- SC_OFF --><div class=\"md\"><p>I&#39;m currently working on a program that orchestrate the execution of other binaries, the program has to access different folders and once there, launch a different binary on the files there, wait for the process to finish and then move on (no output besides the creation of other files). The problem that I&#39;m having is that these other binaries take some time, but they consume almost no cpu / mem resources.</p> <p>What I want to do is to make their execution parallel, so then all folders can be processed at the same time, reducing my waiting time.</p> <p>I&#39;m not an expert on concurrency so I tried to find any examples on the Internet but had found none so far. I would appreciate any insights into that. My only restriction for this case is that for my program to resume its processing, it needs to wait for all threads to finish their processing before moving on, so if it runs 20 threads that will execute a binary on 20 different folders, it needs to wait for all 20 to finish.</p> <p>I would post here some snippets but I truly have found none so far that could be similar to what Im trying to do.</p> <p>Thanks</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/prvst\"> /u/prvst </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/97vvpk/concurrentparallel_binary_execution_from_go/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97vvpk/concurrentparallel_binary_execution_from_go/\">[comments]</a></span>") (id nil "t3_97vvpk") (link ((href . "https://www.reddit.com/r/golang/comments/97vvpk/concurrentparallel_binary_execution_from_go/"))) (updated nil "2018-08-16T20:29:45+00:00") (title nil "Concurrent/Parallel binary execution from GO program"))) ("Internal packages & avoiding import cycles" "<!-- SC_OFF --><div class=\"md\"><p>Since Go 1.4, we have <a href=\"https://golang.org/doc/go1.4#internalpackages\">internal packages</a> to encapsulate application functionality into subpackages without having them become part of the officially exported interface.</p> <p>I use this functionality in my app to encapsulate data structures from the packages that use them in order to enforce that only the data structure's exported interface is used by the main package.</p> <p>However, I recently introduced package context to pass an instance of a logger from the main package to the internal subpackage. The subpackage thus needs to import the main package in order to get the context key of the logger, thereby creating an import cycle.</p> <p>I sketched the situation here: <a href=\"https://www.lucidchart.com/invitations/accept/08863757-14e3-4ed2-92ab-4b5106380e29\">https://www.lucidchart.com/invitations/accept/08863757-14e3-4ed2-92ab-4b5106380e29</a></p> <p>My current solution is to move the context stuff into a separate package that is both imported by the main package and the internal package. However, <em>setting</em> the logger is the job of the main package's consumers, and thus, those will also need to import the third package, which I find ugly.</p> <p>Any suggestions on how to improve this?</p> </div><!-- SC_ON -->   submitted by   <a href=\"https://www.reddit.com/user/problame\"> /u/problame </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/97wcso/internal_packages_avoiding_import_cycles/\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/97wcso/internal_packages_avoiding_import_cycles/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/97wcso/internal_packages_avoiding_import_cycles/" (23413 60512) old 11 nil nil ((guid nil "t3_97wcso") (author nil (name nil "/u/problame") (uri nil "https://www.reddit.com/user/problame")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "<!-- SC_OFF --><div class=\"md\"><p>Since Go 1.4, we have <a href=\"https://golang.org/doc/go1.4#internalpackages\">internal packages</a> to encapsulate application functionality into subpackages without having them become part of the officially exported interface.</p> <p>I use this functionality in my app to encapsulate data structures from the packages that use them in order to enforce that only the data structure&#39;s exported interface is used by the main package.</p> <p>However, I recently introduced package context to pass an instance of a logger from the main package to the internal subpackage. The subpackage thus needs to import the main package in order to get the context key of the logger, thereby creating an import cycle.</p> <p>I sketched the situation here: <a href=\"https://www.lucidchart.com/invitations/accept/08863757-14e3-4ed2-92ab-4b5106380e29\">https://www.lucidchart.com/invitations/accept/08863757-14e3-4ed2-92ab-4b5106380e29</a></p> <p>My current solution is to move the context stuff into a separate package that is both imported by the main package and the internal package. However, <em>setting</em> the logger is the job of the main package&#39;s consumers, and thus, those will also need to import the third package, which I find ugly.</p> <p>Any suggestions on how to improve this?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/problame\"> /u/problame </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/97wcso/internal_packages_avoiding_import_cycles/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97wcso/internal_packages_avoiding_import_cycles/\">[comments]</a></span>") (id nil "t3_97wcso") (link ((href . "https://www.reddit.com/r/golang/comments/97wcso/internal_packages_avoiding_import_cycles/"))) (updated nil "2018-08-16T21:28:00+00:00") (title nil "Internal packages & avoiding import cycles"))) ("Code review request" "<!-- SC_OFF --><div class=\"md\"><p>I would be interested in your code review. Plan is to split the app into cobra based command line tool and rajce-get library. Source is available here - <a href=\"https://github.com/valasek/rajce-get\">https://github.com/valasek/rajce-get</a>. Thank you for your inputs and suggestions.</p> </div><!-- SC_ON -->   submitted by   <a href=\"https://www.reddit.com/user/svalasek\"> /u/svalasek </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/97ww13/code_review_request/\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/97ww13/code_review_request/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/97ww13/code_review_request/" (23413 64600) old 12 nil nil ((guid nil "t3_97ww13") (author nil (name nil "/u/svalasek") (uri nil "https://www.reddit.com/user/svalasek")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "<!-- SC_OFF --><div class=\"md\"><p>I would be interested in your code review. Plan is to split the app into cobra based command line tool and rajce-get library. Source is available here - <a href=\"https://github.com/valasek/rajce-get\">https://github.com/valasek/rajce-get</a>. Thank you for your inputs and suggestions.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/svalasek\"> /u/svalasek </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/97ww13/code_review_request/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97ww13/code_review_request/\">[comments]</a></span>") (id nil "t3_97ww13") (link ((href . "https://www.reddit.com/r/golang/comments/97ww13/code_review_request/"))) (updated nil "2018-08-16T22:36:08+00:00") (title nil "Code review request"))) ("TCP to Go server to send TCP stream to many clients" "<!-- SC_OFF --><div class=\"md\"><p>Hi <a href=\"/r/golang\">r/golang</a>!</p> <p>My name is James one of the two main guys at ADSBx. I'm also very new to Go and trying to consume a JSON stream over TCP from <strong>pub-vrs.adsbexchange.com</strong> port 30005. I have some nodejs experience but nothing complex, a little pub-sub and messaging applications.</p> <p><a href=\"https://adsbexchange.com/data/\">https://adsbexchange.com/data/</a></p> <p>I've played around building some TCP relay servers using Go examples. I tried to use socat or netcat to pipe the pub-vrs JSON stream to the Go tcp relay so they would rebroadcast them to connected clients. It didn't work. I'm missing something obvious and I don't know what.</p> <p>I know the way I'm doing it is obviously a hack and terrible, but I'm trying to learn more and more Go and diving in writing terrible code seemed the best way to learn how not to use Go. ... ugh ..</p> <p>Can anyone give me some pointers? Am I even close to correctly approaching this with Go?</p> <ol> <li>consume the pub-vrs feeds into a read buffer</li> <li>when a client connects I want to send the current read buffer to them and all the connected clients</li> <li>every time the pub-vrs sends new JSON I want to refresh the read buffer and send it to all the clients? Or do I create a new read buffer?</li> </ol> <p>If this server is 20 lines of code and I'm too big of a dolt to get it, please forgive me! </p> <p>Non-working thingy .. in Go</p> <p><a href=\"https://play.golang.org/p/EECzdF-44ga\">https://play.golang.org/p/EECzdF-44ga</a> </p> <p>&lt;/ begin shameless plug &gt;</p> <p>About ADSBx:</p> <p><a href=\"https://adsbexchange.com/\">https://adsbexchange.com/</a></p> <p>At ADSBx we are trying to build a version of dump1090 in Go, that can act as a fast efficient ingest server for the ADSBx project. <a href=\"https://github.com/mutability/dump1090\">https://github.com/mutability/dump1090</a></p> <p>ADSBx is all volunteers and the only ADS-B enthusiast site that tracks everything, no filtering, no blocking, and makes all the data available back to the feeders, researchers, students - basically anyone who can't afford $100k a month from the current ADS-B sources or who can use aircraft tracking data from the block list or who are paying FA, FR24,et all to have aircraft'hidden' from public view.</p> <p>ADSBx supports multiple non-profit organizations with ADS-B tracking data so they can complete their missions.</p> <p>If anyone is looking for a challenging Go project, we need volunteers!</p> <p>&lt;/ end shameless plug &gt;</p> </div><!-- SC_ON -->   submitted by   <a href=\"https://www.reddit.com/user/adsbx-james\"> /u/adsbx-james </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/97zq9t/tcp_to_go_server_to_send_tcp_stream_to_many/\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/97zq9t/tcp_to_go_server_to_send_tcp_stream_to_many/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/97zq9t/tcp_to_go_server_to_send_tcp_stream_to_many/" (23414 24678) old 13 nil nil ((guid nil "t3_97zq9t") (author nil (name nil "/u/adsbx-james") (uri nil "https://www.reddit.com/user/adsbx-james")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "<!-- SC_OFF --><div class=\"md\"><p>Hi <a href=\"/r/golang\">r/golang</a>!</p> <p>My name is James one of the two main guys at ADSBx. I&#39;m also very new to Go and trying to consume a JSON stream over TCP from <strong>pub-vrs.adsbexchange.com</strong> port 30005. I have some nodejs experience but nothing complex, a little pub-sub and messaging applications.</p> <p><a href=\"https://adsbexchange.com/data/\">https://adsbexchange.com/data/</a></p> <p>I&#39;ve played around building some TCP relay servers using Go examples. I tried to use socat or netcat to pipe the pub-vrs JSON stream to the Go tcp relay so they would rebroadcast them to connected clients. It didn&#39;t work. I&#39;m missing something obvious and I don&#39;t know what.</p> <p>I know the way I&#39;m doing it is obviously a hack and terrible, but I&#39;m trying to learn more and more Go and diving in writing terrible code seemed the best way to learn how not to use Go. ... ugh ..</p> <p>Can anyone give me some pointers? Am I even close to correctly approaching this with Go?</p> <ol> <li>consume the pub-vrs feeds into a read buffer</li> <li>when a client connects I want to send the current read buffer to them and all the connected clients</li> <li>every time the pub-vrs sends new JSON I want to refresh the read buffer and send it to all the clients? Or do I create a new read buffer?</li> </ol> <p>If this server is 20 lines of code and I&#39;m too big of a dolt to get it, please forgive me! </p> <p>Non-working thingy .. in Go</p> <p><a href=\"https://play.golang.org/p/EECzdF-44ga\">https://play.golang.org/p/EECzdF-44ga</a> </p> <p>&lt;/ begin shameless plug &gt;</p> <p>About ADSBx:</p> <p><a href=\"https://adsbexchange.com/\">https://adsbexchange.com/</a></p> <p>At ADSBx we are trying to build a version of dump1090 in Go, that can act as a fast efficient ingest server for the ADSBx project. <a href=\"https://github.com/mutability/dump1090\">https://github.com/mutability/dump1090</a></p> <p>ADSBx is all volunteers and the only ADS-B enthusiast site that tracks everything, no filtering, no blocking, and makes all the data available back to the feeders, researchers, students - basically anyone who can&#39;t afford $100k a month from the current ADS-B sources or who can use aircraft tracking data from the block list or who are paying FA, FR24,et all to have aircraft&#39;hidden&#39; from public view.</p> <p>ADSBx supports multiple non-profit organizations with ADS-B tracking data so they can complete their missions.</p> <p>If anyone is looking for a challenging Go project, we need volunteers!</p> <p>&lt;/ end shameless plug &gt;</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/adsbx-james\"> /u/adsbx-james </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/97zq9t/tcp_to_go_server_to_send_tcp_stream_to_many/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97zq9t/tcp_to_go_server_to_send_tcp_stream_to_many/\">[comments]</a></span>") (id nil "t3_97zq9t") (link ((href . "https://www.reddit.com/r/golang/comments/97zq9t/tcp_to_go_server_to_send_tcp_stream_to_many/"))) (updated nil "2018-08-17T05:43:02+00:00") (title nil "TCP to Go server to send TCP stream to many clients"))) ("RPC starter kit with Twirp" "submitted by   <a href=\"https://www.reddit.com/user/Ribice\"> /u/Ribice </a> <br/> <span><a href=\"https://github.com/ribice/twisk\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/97s5bm/rpc_starter_kit_with_twirp/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/97s5bm/rpc_starter_kit_with_twirp/" (23413 30684) old 14 nil nil ((guid nil "t3_97s5bm") (author nil (name nil "/u/Ribice") (uri nil "https://www.reddit.com/user/Ribice")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Ribice\"> /u/Ribice </a> <br/> <span><a href=\"https://github.com/ribice/twisk\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97s5bm/rpc_starter_kit_with_twirp/\">[comments]</a></span>") (id nil "t3_97s5bm") (link ((href . "https://www.reddit.com/r/golang/comments/97s5bm/rpc_starter_kit_with_twirp/"))) (updated nil "2018-08-16T13:10:52+00:00") (title nil "RPC starter kit with Twirp"))) ("Refactoring in Go: goroutine concurrency" "submitted by   <a href=\"https://www.reddit.com/user/Happycodeine\"> /u/Happycodeine </a> <br/> <span><a href=\"https://medium.com/@sergimansilla/refactoring-in-go-goroutine-concurrency-fccbe7093c04\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/97rsfx/refactoring_in_go_goroutine_concurrency/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/97rsfx/refactoring_in_go_goroutine_concurrency/" (23413 27640) old 15 nil nil ((guid nil "t3_97rsfx") (author nil (name nil "/u/Happycodeine") (uri nil "https://www.reddit.com/user/Happycodeine")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Happycodeine\"> /u/Happycodeine </a> <br/> <span><a href=\"https://medium.com/@sergimansilla/refactoring-in-go-goroutine-concurrency-fccbe7093c04\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97rsfx/refactoring_in_go_goroutine_concurrency/\">[comments]</a></span>") (id nil "t3_97rsfx") (link ((href . "https://www.reddit.com/r/golang/comments/97rsfx/refactoring_in_go_goroutine_concurrency/"))) (updated nil "2018-08-16T12:20:08+00:00") (title nil "Refactoring in Go: goroutine concurrency"))) ("Pluralsight Downloader in GoLang" "submitted by   <a href=\"https://www.reddit.com/user/prabaprakash\"> /u/prabaprakash </a> <br/> <span><a href=\"https://i.redd.it/iwz5cj5ftig11.png\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/97w7iy/pluralsight_downloader_in_golang/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/97w7iy/pluralsight_downloader_in_golang/" (23413 59431) old 16 nil nil ((guid nil "t3_97w7iy") (author nil (name nil "/u/prabaprakash") (uri nil "https://www.reddit.com/user/prabaprakash")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/prabaprakash\"> /u/prabaprakash </a> <br/> <span><a href=\"https://i.redd.it/iwz5cj5ftig11.png\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97w7iy/pluralsight_downloader_in_golang/\">[comments]</a></span>") (id nil "t3_97w7iy") (link ((href . "https://www.reddit.com/r/golang/comments/97w7iy/pluralsight_downloader_in_golang/"))) (updated nil "2018-08-16T21:09:59+00:00") (title nil "Pluralsight Downloader in GoLang"))) ("Choosing a Golang Web Framework" "<!-- SC_OFF --><div class=\"md\"><p>Hello, I'm a back-end developer that is building a startup, the back-end language that I'm using is Node.js with the Expressjs framework.<br/> I don't have problems so far but I'm curious and I want to know the alternatives, I would like to try something in Golang (that's why I'm here), but I can't choose a good web framework to build a REST API, I asked some friends about this and some of them say mux, others gin and others say http go module, I would really like to know the differences (pros and cons), taking into consideration that should be production ready.<br/> I don't need something that feels similiar to expressjs I can learn something new, and I'm open to something that is not Mux, Gin, and HTTP if contains an explanation. </p> <p>Thanks for the time :)</p> </div><!-- SC_ON -->   submitted by   <a href=\"https://www.reddit.com/user/space_mercxry\"> /u/space_mercxry </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/97p61b/choosing_a_golang_web_framework/\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/97p61b/choosing_a_golang_web_framework/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/97p61b/choosing_a_golang_web_framework/" (23412 64313) old 17 nil nil ((guid nil "t3_97p61b") (author nil (name nil "/u/space_mercxry") (uri nil "https://www.reddit.com/user/space_mercxry")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "<!-- SC_OFF --><div class=\"md\"><p>Hello, I&#39;m a back-end developer that is building a startup, the back-end language that I&#39;m using is Node.js with the Expressjs framework.<br/> I don&#39;t have problems so far but I&#39;m curious and I want to know the alternatives, I would like to try something in Golang (that&#39;s why I&#39;m here), but I can&#39;t choose a good web framework to build a REST API, I asked some friends about this and some of them say mux, others gin and others say http go module, I would really like to know the differences (pros and cons), taking into consideration that should be production ready.<br/> I don&#39;t need something that feels similiar to expressjs I can learn something new, and I&#39;m open to something that is not Mux, Gin, and HTTP if contains an explanation. </p> <p>Thanks for the time :)</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/space_mercxry\"> /u/space_mercxry </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/97p61b/choosing_a_golang_web_framework/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97p61b/choosing_a_golang_web_framework/\">[comments]</a></span>") (id nil "t3_97p61b") (link ((href . "https://www.reddit.com/r/golang/comments/97p61b/choosing_a_golang_web_framework/"))) (updated nil "2018-08-16T04:19:05+00:00") (title nil "Choosing a Golang Web Framework"))) ("Trying to zip some files without creating a folder inside the archive" "<!-- SC_OFF --><div class=\"md\"><p>Hello,</p> <p>Really new with Go, trying to create a function that will grab a list of files and zip them up. Googled for a while today, i can easily archive files, but it also creates a folder inside the archive (which, for stupid reasons i don't want to get into, won't work). I basically need to take all the files in a directory, zip them with no folder structure, and that's it. Here is kinda what i'm working with:</p> <pre><code>package main import ( &quot;archive/zip&quot; &quot;os&quot; &quot;path/filepath&quot; &quot;strings&quot; &quot;io&quot; ) func zipit(source, target string) error { zipfile, err := os.Create(target) if err != nil { return err } defer zipfile.Close() archive := zip.NewWriter(zipfile) defer archive.Close() info, err := os.Stat(source) if err != nil { return nil } var baseDir string if info.IsDir() { baseDir = filepath.Base(source) } filepath.Walk(source, func(path string, info os.FileInfo, err error) error { if err != nil { return err } header, err := zip.FileInfoHeader(info) if err != nil { return err } if baseDir != &quot;&quot; { header.Name = filepath.Join(baseDir, strings.TrimPrefix(path, source)) } if info.IsDir() { header.Name += &quot;/&quot; } else { header.Method = zip.Deflate } writer, err := archive.CreateHeader(header) if err != nil { return err } if info.IsDir() { return nil } file, err := os.Open(path) if err != nil { return err } defer file.Close() _, err = io.Copy(writer, file) return err }) return err } func main() { zipit(&quot;output/&quot;,&quot;ABG_Gather_Data.zip&quot;) } </code></pre> </div><!-- SC_ON -->   submitted by   <a href=\"https://www.reddit.com/user/hansoloburgerz\"> /u/hansoloburgerz </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/97uhkh/trying_to_zip_some_files_without_creating_a/\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/97uhkh/trying_to_zip_some_files_without_creating_a/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/97uhkh/trying_to_zip_some_files_without_creating_a/" (23413 47396) old 18 nil nil ((guid nil "t3_97uhkh") (author nil (name nil "/u/hansoloburgerz") (uri nil "https://www.reddit.com/user/hansoloburgerz")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "<!-- SC_OFF --><div class=\"md\"><p>Hello,</p> <p>Really new with Go, trying to create a function that will grab a list of files and zip them up. Googled for a while today, i can easily archive files, but it also creates a folder inside the archive (which, for stupid reasons i don&#39;t want to get into, won&#39;t work). I basically need to take all the files in a directory, zip them with no folder structure, and that&#39;s it. Here is kinda what i&#39;m working with:</p> <pre><code>package main import ( &quot;archive/zip&quot; &quot;os&quot; &quot;path/filepath&quot; &quot;strings&quot; &quot;io&quot; ) func zipit(source, target string) error { zipfile, err := os.Create(target) if err != nil { return err } defer zipfile.Close() archive := zip.NewWriter(zipfile) defer archive.Close() info, err := os.Stat(source) if err != nil { return nil } var baseDir string if info.IsDir() { baseDir = filepath.Base(source) } filepath.Walk(source, func(path string, info os.FileInfo, err error) error { if err != nil { return err } header, err := zip.FileInfoHeader(info) if err != nil { return err } if baseDir != &quot;&quot; { header.Name = filepath.Join(baseDir, strings.TrimPrefix(path, source)) } if info.IsDir() { header.Name += &quot;/&quot; } else { header.Method = zip.Deflate } writer, err := archive.CreateHeader(header) if err != nil { return err } if info.IsDir() { return nil } file, err := os.Open(path) if err != nil { return err } defer file.Close() _, err = io.Copy(writer, file) return err }) return err } func main() { zipit(&quot;output/&quot;,&quot;ABG_Gather_Data.zip&quot;) } </code></pre> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/hansoloburgerz\"> /u/hansoloburgerz </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/97uhkh/trying_to_zip_some_files_without_creating_a/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97uhkh/trying_to_zip_some_files_without_creating_a/\">[comments]</a></span>") (id nil "t3_97uhkh") (link ((href . "https://www.reddit.com/r/golang/comments/97uhkh/trying_to_zip_some_files_without_creating_a/"))) (updated nil "2018-08-16T17:49:24+00:00") (title nil "Trying to zip some files without creating a folder inside the archive"))) ("Todd Mcleod's tutorials on Udemy review" "<!-- SC_OFF --><div class=\"md\"><p>Are these 2 courses from udemy (same instructor) good for learning golang as a beginner?</p> <p>I know there must a lot of good books to learn golang but i just prefer video tutorials.</p> <p><a href=\"https://www.udemy.com/learn-how-to-code/\">course 1</a></p> <p><a href=\"https://www.udemy.com/go-programming-language/\">course 2</a></p> </div><!-- SC_ON -->   submitted by   <a href=\"https://www.reddit.com/user/xerxes3117\"> /u/xerxes3117 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/97lw54/todd_mcleods_tutorials_on_udemy_review/\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/97lw54/todd_mcleods_tutorials_on_udemy_review/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/97lw54/todd_mcleods_tutorials_on_udemy_review/" (23412 37213) old 19 nil nil ((guid nil "t3_97lw54") (author nil (name nil "/u/xerxes3117") (uri nil "https://www.reddit.com/user/xerxes3117")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "<!-- SC_OFF --><div class=\"md\"><p>Are these 2 courses from udemy (same instructor) good for learning golang as a beginner?</p> <p>I know there must a lot of good books to learn golang but i just prefer video tutorials.</p> <p><a href=\"https://www.udemy.com/learn-how-to-code/\">course 1</a></p> <p><a href=\"https://www.udemy.com/go-programming-language/\">course 2</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/xerxes3117\"> /u/xerxes3117 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/97lw54/todd_mcleods_tutorials_on_udemy_review/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97lw54/todd_mcleods_tutorials_on_udemy_review/\">[comments]</a></span>") (id nil "t3_97lw54") (link ((href . "https://www.reddit.com/r/golang/comments/97lw54/todd_mcleods_tutorials_on_udemy_review/"))) (updated nil "2018-08-15T20:47:25+00:00") (title nil "Todd Mcleod's tutorials on Udemy review"))) ("sclient - a poor man's (or Windows user's) ssl unwrapper - alternative to openssl s_client, stunnel, socat" "submitted by   <a href=\"https://www.reddit.com/user/coolaj86\"> /u/coolaj86 </a> <br/> <span><a href=\"https://telebit.cloud/sclient/\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/97nai4/sclient_a_poor_mans_or_windows_users_ssl/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/97nai4/sclient_a_poor_mans_or_windows_users_ssl/" (23412 47957) old 20 nil nil ((guid nil "t3_97nai4") (author nil (name nil "/u/coolaj86") (uri nil "https://www.reddit.com/user/coolaj86")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/coolaj86\"> /u/coolaj86 </a> <br/> <span><a href=\"https://telebit.cloud/sclient/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97nai4/sclient_a_poor_mans_or_windows_users_ssl/\">[comments]</a></span>") (id nil "t3_97nai4") (link ((href . "https://www.reddit.com/r/golang/comments/97nai4/sclient_a_poor_mans_or_windows_users_ssl/"))) (updated nil "2018-08-15T23:46:29+00:00") (title nil "sclient - a poor man's (or Windows user's) ssl unwrapper - alternative to openssl s_client, stunnel, socat"))) ("The X-Files: Avoiding Concurrency Boilerplate With golang.org/x/sync" "submitted by   <a href=\"https://www.reddit.com/user/rodaine\"> /u/rodaine </a> <br/> <span><a href=\"https://rodaine.com/2018/08/x-files-sync-golang/\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/97jqox/the_xfiles_avoiding_concurrency_boilerplate_with/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/97jqox/the_xfiles_avoiding_concurrency_boilerplate_with/" (23412 21937) old 21 nil nil ((guid nil "t3_97jqox") (author nil (name nil "/u/rodaine") (uri nil "https://www.reddit.com/user/rodaine")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/rodaine\"> /u/rodaine </a> <br/> <span><a href=\"https://rodaine.com/2018/08/x-files-sync-golang/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97jqox/the_xfiles_avoiding_concurrency_boilerplate_with/\">[comments]</a></span>") (id nil "t3_97jqox") (link ((href . "https://www.reddit.com/r/golang/comments/97jqox/the_xfiles_avoiding_concurrency_boilerplate_with/"))) (updated nil "2018-08-15T16:32:49+00:00") (title nil "The X-Files: Avoiding Concurrency Boilerplate With golang.org/x/sync"))) ("Go's net package doesn't have opaque errors, just undocumented ones" "submitted by   <a href=\"https://www.reddit.com/user/speckz\"> /u/speckz </a> <br/> <span><a href=\"https://utcc.utoronto.ca/~cks/space/blog/programming/GoNetErrorsUndocumented\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/97hqsz/gos_net_package_doesnt_have_opaque_errors_just/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/97hqsz/gos_net_package_doesnt_have_opaque_errors_just/" (23412 6531) old 22 nil nil ((guid nil "t3_97hqsz") (author nil (name nil "/u/speckz") (uri nil "https://www.reddit.com/user/speckz")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/speckz\"> /u/speckz </a> <br/> <span><a href=\"https://utcc.utoronto.ca/~cks/space/blog/programming/GoNetErrorsUndocumented\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97hqsz/gos_net_package_doesnt_have_opaque_errors_just/\">[comments]</a></span>") (id nil "t3_97hqsz") (link ((href . "https://www.reddit.com/r/golang/comments/97hqsz/gos_net_package_doesnt_have_opaque_errors_just/"))) (updated nil "2018-08-15T12:16:03+00:00") (title nil "Go's net package doesn't have opaque errors, just undocumented ones"))) ("[Talk] - Thinking in Go" "submitted by   <a href=\"https://www.reddit.com/user/vagmi\"> /u/vagmi </a> <br/> <span><a href=\"https://medium.com/tarkalabs/thinking-in-go-c5d5ceec67a2\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/97pmom/talk_thinking_in_go/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/97pmom/talk_thinking_in_go/" (23413 3506) old 23 nil nil ((guid nil "t3_97pmom") (author nil (name nil "/u/vagmi") (uri nil "https://www.reddit.com/user/vagmi")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/vagmi\"> /u/vagmi </a> <br/> <span><a href=\"https://medium.com/tarkalabs/thinking-in-go-c5d5ceec67a2\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97pmom/talk_thinking_in_go/\">[comments]</a></span>") (id nil "t3_97pmom") (link ((href . "https://www.reddit.com/r/golang/comments/97pmom/talk_thinking_in_go/"))) (updated nil "2018-08-16T05:37:54+00:00") (title nil "[Talk] - Thinking in Go"))) ("Union alternative" "<!-- SC_OFF --><div class=\"md\"><p>Go lacking union types, could someone please show me how to approach the following problem?</p> <p>I have three shapes: circle, triangle, square and would like to get some information on each of them. Each has `info` method but I would like it to be private and have a public `Info` function which accepts each shape and calls the private method behind the scenes. So, instead of `<a href=\"https://myTriangle.Info\">myTriangle.Info</a>()`, I would like to type `Info(myTriangle)`. In C, I would simply crate a `Shape` union type accepting all three shapes and then have a function `Info` which accepts the `Shape` type. Is something like this possible in Go? The closest thing I could find is to have an empty interface and then using reflection switch-case to each particular kind but I would like to not loose compile-time type checks.</p> <p>PS: The shapes examples is intentionally contrived to illustrate the problem I have.</p> </div><!-- SC_ON -->   submitted by   <a href=\"https://www.reddit.com/user/thomac\"> /u/thomac </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/97q3dt/union_alternative/\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/97q3dt/union_alternative/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/97q3dt/union_alternative/" (23413 8695) old 24 nil nil ((guid nil "t3_97q3dt") (author nil (name nil "/u/thomac") (uri nil "https://www.reddit.com/user/thomac")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "<!-- SC_OFF --><div class=\"md\"><p>Go lacking union types, could someone please show me how to approach the following problem?</p> <p>I have three shapes: circle, triangle, square and would like to get some information on each of them. Each has `info` method but I would like it to be private and have a public `Info` function which accepts each shape and calls the private method behind the scenes. So, instead of `<a href=\"https://myTriangle.Info\">myTriangle.Info</a>()`, I would like to type `Info(myTriangle)`. In C, I would simply crate a `Shape` union type accepting all three shapes and then have a function `Info` which accepts the `Shape` type. Is something like this possible in Go? The closest thing I could find is to have an empty interface and then using reflection switch-case to each particular kind but I would like to not loose compile-time type checks.</p> <p>PS: The shapes examples is intentionally contrived to illustrate the problem I have.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/thomac\"> /u/thomac </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/97q3dt/union_alternative/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97q3dt/union_alternative/\">[comments]</a></span>") (id nil "t3_97q3dt") (link ((href . "https://www.reddit.com/r/golang/comments/97q3dt/union_alternative/"))) (updated nil "2018-08-16T07:04:23+00:00") (title nil "Union alternative"))) ("A Go implementation of TensorFlow's streaming quantiles estimator (pretty fast)" "submitted by   <a href=\"https://www.reddit.com/user/seiflotfy\"> /u/seiflotfy </a> <br/> <span><a href=\"https://github.com/axiomhq/quantiles\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/97ilnx/a_go_implementation_of_tensorflows_streaming/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/97ilnx/a_go_implementation_of_tensorflows_streaming/" (23412 13858) old 25 nil nil ((guid nil "t3_97ilnx") (author nil (name nil "/u/seiflotfy") (uri nil "https://www.reddit.com/user/seiflotfy")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/seiflotfy\"> /u/seiflotfy </a> <br/> <span><a href=\"https://github.com/axiomhq/quantiles\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/97ilnx/a_go_implementation_of_tensorflows_streaming/\">[comments]</a></span>") (id nil "t3_97ilnx") (link ((href . "https://www.reddit.com/r/golang/comments/97ilnx/a_go_implementation_of_tensorflows_streaming/"))) (updated nil "2018-08-15T14:18:10+00:00") (title nil "A Go implementation of TensorFlow's streaming quantiles estimator (pretty fast)"))))