;; -*- coding: utf-8 -*-
(("A deep dive into the Go memory allocator and garbage collector" "submitted by   <a href=\"https://www.reddit.com/user/mfrw1\"> /u/mfrw1 </a> <br/> <span><a href=\"https://about.sourcegraph.com/go/gophercon-2018-allocator-wrestling/\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/9bqto6/a_deep_dive_into_the_go_memory_allocator_and/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/9bqto6/a_deep_dive_into_the_go_memory_allocator_and/" (23432 52721) obsolete 1 nil nil ((guid nil "t3_9bqto6") (author nil (name nil "/u/mfrw1") (uri nil "https://www.reddit.com/user/mfrw1")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/mfrw1\"> /u/mfrw1 </a> <br/> <span><a href=\"https://about.sourcegraph.com/go/gophercon-2018-allocator-wrestling/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/9bqto6/a_deep_dive_into_the_go_memory_allocator_and/\">[comments]</a></span>") (id nil "t3_9bqto6") (link ((href . "https://www.reddit.com/r/golang/comments/9bqto6/a_deep_dive_into_the_go_memory_allocator_and/"))) (updated nil "2018-08-31T05:11:13+00:00") (title nil "A deep dive into the Go memory allocator and garbage collector"))) ("The pain that minimal version selection solves" "submitted by   <a href=\"https://www.reddit.com/user/casted\"> /u/casted </a> <br/> <span><a href=\"https://about.sourcegraph.com/blog/the-pain-that-minimal-version-selection-solves/\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/9bp6jj/the_pain_that_minimal_version_selection_solves/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/9bp6jj/the_pain_that_minimal_version_selection_solves/" (23432 37655) obsolete 2 nil nil ((guid nil "t3_9bp6jj") (author nil (name nil "/u/casted") (uri nil "https://www.reddit.com/user/casted")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/casted\"> /u/casted </a> <br/> <span><a href=\"https://about.sourcegraph.com/blog/the-pain-that-minimal-version-selection-solves/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/9bp6jj/the_pain_that_minimal_version_selection_solves/\">[comments]</a></span>") (id nil "t3_9bp6jj") (link ((href . "https://www.reddit.com/r/golang/comments/9bp6jj/the_pain_that_minimal_version_selection_solves/"))) (updated nil "2018-08-31T01:00:07+00:00") (title nil "The pain that minimal version selection solves"))) ("Initial Go modules support for vim-go (auto format on save, syntax highlighting, etc..)" "submitted by   <a href=\"https://www.reddit.com/user/farslan\"> /u/farslan </a> <br/> <span><a href=\"https://twitter.com/fatih/status/1035175073471184896\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/9bk885/initial_go_modules_support_for_vimgo_auto_format/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/9bk885/initial_go_modules_support_for_vimgo_auto_format/" (23432 732) obsolete 3 nil nil ((guid nil "t3_9bk885") (author nil (name nil "/u/farslan") (uri nil "https://www.reddit.com/user/farslan")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/farslan\"> /u/farslan </a> <br/> <span><a href=\"https://twitter.com/fatih/status/1035175073471184896\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/9bk885/initial_go_modules_support_for_vimgo_auto_format/\">[comments]</a></span>") (id nil "t3_9bk885") (link ((href . "https://www.reddit.com/r/golang/comments/9bk885/initial_go_modules_support_for_vimgo_auto_format/"))) (updated nil "2018-08-30T14:44:44+00:00") (title nil "Initial Go modules support for vim-go (auto format on save, syntax highlighting, etc..)"))) ("Why a non-developer like myself uses Go..." "submitted by   <a href=\"https://www.reddit.com/user/bs-by-es\"> /u/bs-by-es </a> <br/> <span><a href=\"https://esheavyindustries.com/2018/08/why-go/\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/9boeiq/why_a_nondeveloper_like_myself_uses_go/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/9boeiq/why_a_nondeveloper_like_myself_uses_go/" (23432 31241) obsolete 4 nil nil ((guid nil "t3_9boeiq") (author nil (name nil "/u/bs-by-es") (uri nil "https://www.reddit.com/user/bs-by-es")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/bs-by-es\"> /u/bs-by-es </a> <br/> <span><a href=\"https://esheavyindustries.com/2018/08/why-go/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/9boeiq/why_a_nondeveloper_like_myself_uses_go/\">[comments]</a></span>") (id nil "t3_9boeiq") (link ((href . "https://www.reddit.com/r/golang/comments/9boeiq/why_a_nondeveloper_like_myself_uses_go/"))) (updated nil "2018-08-30T23:13:13+00:00") (title nil "Why a non-developer like myself uses Go..."))) ("keydb - high performance key/value database in Go" "<!-- SC_OFF --><div class=\"md\"><p>Is now available at <a href=\"https://github.com/robaho/keydb\">https://github.com/robaho/keydb</a> </p> <p>It uses LSM trees so it is very efficient. The bulk insert and sequential read times are less than 2 microsecs on my machine.</p> <p>It was primarily designed to allow the efficient storage of 'market data' to be played back later.</p> <p>I know there are a few similar projects but I did this as a continued Go learning exercise.</p> <p>&#x200B;</p> </div><!-- SC_ON -->   submitted by   <a href=\"https://www.reddit.com/user/robaho99\"> /u/robaho99 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/9bqa9n/keydb_high_performance_keyvalue_database_in_go/\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/9bqa9n/keydb_high_performance_keyvalue_database_in_go/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/9bqa9n/keydb_high_performance_keyvalue_database_in_go/" (23432 47414) obsolete 5 nil nil ((guid nil "t3_9bqa9n") (author nil (name nil "/u/robaho99") (uri nil "https://www.reddit.com/user/robaho99")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "<!-- SC_OFF --><div class=\"md\"><p>Is now available at <a href=\"https://github.com/robaho/keydb\">https://github.com/robaho/keydb</a> </p> <p>It uses LSM trees so it is very efficient. The bulk insert and sequential read times are less than 2 microsecs on my machine.</p> <p>It was primarily designed to allow the efficient storage of &#39;market data&#39; to be played back later.</p> <p>I know there are a few similar projects but I did this as a continued Go learning exercise.</p> <p>&#x200B;</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/robaho99\"> /u/robaho99 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/9bqa9n/keydb_high_performance_keyvalue_database_in_go/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/9bqa9n/keydb_high_performance_keyvalue_database_in_go/\">[comments]</a></span>") (id nil "t3_9bqa9n") (link ((href . "https://www.reddit.com/r/golang/comments/9bqa9n/keydb_high_performance_keyvalue_database_in_go/"))) (updated nil "2018-08-31T03:42:46+00:00") (title nil "keydb - high performance key/value database in Go"))) ("How to develop Real Time video streaming service?" "<!-- SC_OFF --><div class=\"md\"><p>Hello, I want to develop a real time video streaming service in Go. But how to do that from scratch?</p> <p>Using socket programming to send video data stream to a socket server? Then how to show the video to other clients?</p> </div><!-- SC_ON -->   submitted by   <a href=\"https://www.reddit.com/user/CrappyFap69\"> /u/CrappyFap69 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/9bqabv/how_to_develop_real_time_video_streaming_service/\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/9bqabv/how_to_develop_real_time_video_streaming_service/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/9bqabv/how_to_develop_real_time_video_streaming_service/" (23432 47433) obsolete 6 nil nil ((guid nil "t3_9bqabv") (author nil (name nil "/u/CrappyFap69") (uri nil "https://www.reddit.com/user/CrappyFap69")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "<!-- SC_OFF --><div class=\"md\"><p>Hello, I want to develop a real time video streaming service in Go. But how to do that from scratch?</p> <p>Using socket programming to send video data stream to a socket server? Then how to show the video to other clients?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/CrappyFap69\"> /u/CrappyFap69 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/9bqabv/how_to_develop_real_time_video_streaming_service/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/9bqabv/how_to_develop_real_time_video_streaming_service/\">[comments]</a></span>") (id nil "t3_9bqabv") (link ((href . "https://www.reddit.com/r/golang/comments/9bqabv/how_to_develop_real_time_video_streaming_service/"))) (updated nil "2018-08-31T03:43:05+00:00") (title nil "How to develop Real Time video streaming service?"))) ("Why I hate Golang's complex type." "<!-- SC_OFF --><div class=\"md\"><p>I just got up in the middle of the night because Go's complex type is stupid, and I need to vent. I apologize if I'm hard to follow or ineloquent I just need to vent my frustration.</p> <p>My gripe with complex64 and complex128 is not the same dumb &quot;I don't want to use this language feature, so it shouldn't exists&quot; argument I see floating around every so often, but instead I'm someone who does want to do math with complex numbers and these types make my life worse. Very often in the programs I'm writing I want to do complex multiplication, complex exponentiation, or something else to do with complex numbers, but the problem is the data I want to perform these operations are usually some vector representation. Because copying the values of the vector to a complex typed variable performing the operation and copying back the result would counter act any performance gains I might get from using the builtin type I end up always reimplementing these things myself. This is stupid. On top of being utterly useless even to the minority of people who could benefit from the feature, it also prevents a library (standard or otherwise) from being created.</p> </div><!-- SC_ON -->   submitted by   <a href=\"https://www.reddit.com/user/theaceshinigami\"> /u/theaceshinigami </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/9brbze/why_i_hate_golangs_complex_type/\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/9brbze/why_i_hate_golangs_complex_type/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/9brbze/why_i_hate_golangs_complex_type/" (23432 58318) obsolete 7 nil nil ((guid nil "t3_9brbze") (author nil (name nil "/u/theaceshinigami") (uri nil "https://www.reddit.com/user/theaceshinigami")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "<!-- SC_OFF --><div class=\"md\"><p>I just got up in the middle of the night because Go&#39;s complex type is stupid, and I need to vent. I apologize if I&#39;m hard to follow or ineloquent I just need to vent my frustration.</p> <p>My gripe with complex64 and complex128 is not the same dumb &quot;I don&#39;t want to use this language feature, so it shouldn&#39;t exists&quot; argument I see floating around every so often, but instead I&#39;m someone who does want to do math with complex numbers and these types make my life worse. Very often in the programs I&#39;m writing I want to do complex multiplication, complex exponentiation, or something else to do with complex numbers, but the problem is the data I want to perform these operations are usually some vector representation. Because copying the values of the vector to a complex typed variable performing the operation and copying back the result would counter act any performance gains I might get from using the builtin type I end up always reimplementing these things myself. This is stupid. On top of being utterly useless even to the minority of people who could benefit from the feature, it also prevents a library (standard or otherwise) from being created.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/theaceshinigami\"> /u/theaceshinigami </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/9brbze/why_i_hate_golangs_complex_type/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/9brbze/why_i_hate_golangs_complex_type/\">[comments]</a></span>") (id nil "t3_9brbze") (link ((href . "https://www.reddit.com/r/golang/comments/9brbze/why_i_hate_golangs_complex_type/"))) (updated nil "2018-08-31T06:44:30+00:00") (title nil "Why I hate Golang's complex type."))) ("Wrote a new lib that allows moving files to the OS Trash, works for Mac OS, Linux and Windows" "submitted by   <a href=\"https://www.reddit.com/user/BiosMarcel\"> /u/BiosMarcel </a> <br/> <span><a href=\"https://github.com/Bios-Marcel/wastebasket\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/9bnh6z/wrote_a_new_lib_that_allows_moving_files_to_the/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/9bnh6z/wrote_a_new_lib_that_allows_moving_files_to_the/" (23432 23147) obsolete 8 nil nil ((guid nil "t3_9bnh6z") (author nil (name nil "/u/BiosMarcel") (uri nil "https://www.reddit.com/user/BiosMarcel")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/BiosMarcel\"> /u/BiosMarcel </a> <br/> <span><a href=\"https://github.com/Bios-Marcel/wastebasket\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/9bnh6z/wrote_a_new_lib_that_allows_moving_files_to_the/\">[comments]</a></span>") (id nil "t3_9bnh6z") (link ((href . "https://www.reddit.com/r/golang/comments/9bnh6z/wrote_a_new_lib_that_allows_moving_files_to_the/"))) (updated nil "2018-08-30T20:58:19+00:00") (title nil "Wrote a new lib that allows moving files to the OS Trash, works for Mac OS, Linux and Windows"))) ("Playing with Go modules proxies" "submitted by   <a href=\"https://www.reddit.com/user/robteix\"> /u/robteix </a> <br/> <span><a href=\"https://roberto.selbach.ca/go-proxies/\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/9bkd6p/playing_with_go_modules_proxies/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/9bkd6p/playing_with_go_modules_proxies/" (23432 1707) obsolete 9 nil nil ((guid nil "t3_9bkd6p") (author nil (name nil "/u/robteix") (uri nil "https://www.reddit.com/user/robteix")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/robteix\"> /u/robteix </a> <br/> <span><a href=\"https://roberto.selbach.ca/go-proxies/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/9bkd6p/playing_with_go_modules_proxies/\">[comments]</a></span>") (id nil "t3_9bkd6p") (link ((href . "https://www.reddit.com/r/golang/comments/9bkd6p/playing_with_go_modules_proxies/"))) (updated nil "2018-08-30T15:00:59+00:00") (title nil "Playing with Go modules proxies"))) ("The Scheduler Saga" "submitted by   <a href=\"https://www.reddit.com/user/ngaut\"> /u/ngaut </a> <br/> <span><a href=\"https://speakerdeck.com/kavya719/the-scheduler-saga\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/9bi42a/the_scheduler_saga/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/9bi42a/the_scheduler_saga/" (23431 47209) obsolete 10 nil nil ((guid nil "t3_9bi42a") (author nil (name nil "/u/ngaut") (uri nil "https://www.reddit.com/user/ngaut")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ngaut\"> /u/ngaut </a> <br/> <span><a href=\"https://speakerdeck.com/kavya719/the-scheduler-saga\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/9bi42a/the_scheduler_saga/\">[comments]</a></span>") (id nil "t3_9bi42a") (link ((href . "https://www.reddit.com/r/golang/comments/9bi42a/the_scheduler_saga/"))) (updated nil "2018-08-30T09:27:05+00:00") (title nil "The Scheduler Saga"))) ("The pain that minimal version selection solves" "submitted by   <a href=\"https://www.reddit.com/user/ngaut\"> /u/ngaut </a> <br/> <span><a href=\"https://about.sourcegraph.com/blog/the-pain-that-minimal-version-selection-solves/\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/9bqvzj/the_pain_that_minimal_version_selection_solves/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/9bqvzj/the_pain_that_minimal_version_selection_solves/" (23432 53387) obsolete 11 nil nil ((guid nil "t3_9bqvzj") (author nil (name nil "/u/ngaut") (uri nil "https://www.reddit.com/user/ngaut")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ngaut\"> /u/ngaut </a> <br/> <span><a href=\"https://about.sourcegraph.com/blog/the-pain-that-minimal-version-selection-solves/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/9bqvzj/the_pain_that_minimal_version_selection_solves/\">[comments]</a></span>") (id nil "t3_9bqvzj") (link ((href . "https://www.reddit.com/r/golang/comments/9bqvzj/the_pain_that_minimal_version_selection_solves/"))) (updated nil "2018-08-31T05:22:19+00:00") (title nil "The pain that minimal version selection solves"))) ("Freeflix - Torrent movie server" "submitted by   <a href=\"https://www.reddit.com/user/Ninjaintrouble\"> /u/Ninjaintrouble </a> <br/> <span><a href=\"https://github.com/ninjaintrouble/freeflix\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/9bo6xz/freeflix_torrent_movie_server/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/9bo6xz/freeflix_torrent_movie_server/" (23432 29632) obsolete 12 nil nil ((guid nil "t3_9bo6xz") (author nil (name nil "/u/Ninjaintrouble") (uri nil "https://www.reddit.com/user/Ninjaintrouble")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Ninjaintrouble\"> /u/Ninjaintrouble </a> <br/> <span><a href=\"https://github.com/ninjaintrouble/freeflix\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/9bo6xz/freeflix_torrent_movie_server/\">[comments]</a></span>") (id nil "t3_9bo6xz") (link ((href . "https://www.reddit.com/r/golang/comments/9bo6xz/freeflix_torrent_movie_server/"))) (updated nil "2018-08-30T22:46:24+00:00") (title nil "Freeflix - Torrent movie server"))) ("Question: Go 1.11 IDE/Editor" "<!-- SC_OFF --><div class=\"md\"><p>What IDE/text editors do you guys use/suggest for go 1.11?</p> </div><!-- SC_ON -->   submitted by   <a href=\"https://www.reddit.com/user/Ohmygolang\"> /u/Ohmygolang </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/9bp2tm/question_go_111_ideeditor/\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/9bp2tm/question_go_111_ideeditor/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/9bp2tm/question_go_111_ideeditor/" (23432 36767) obsolete 13 nil nil ((guid nil "t3_9bp2tm") (author nil (name nil "/u/Ohmygolang") (uri nil "https://www.reddit.com/user/Ohmygolang")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "<!-- SC_OFF --><div class=\"md\"><p>What IDE/text editors do you guys use/suggest for go 1.11?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Ohmygolang\"> /u/Ohmygolang </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/9bp2tm/question_go_111_ideeditor/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/9bp2tm/question_go_111_ideeditor/\">[comments]</a></span>") (id nil "t3_9bp2tm") (link ((href . "https://www.reddit.com/r/golang/comments/9bp2tm/question_go_111_ideeditor/"))) (updated nil "2018-08-31T00:45:19+00:00") (title nil "Question: Go 1.11 IDE/Editor"))) ("Wasm with Go to build an S2 cover map viewer" "submitted by   <a href=\"https://www.reddit.com/user/robteix\"> /u/robteix </a> <br/> <span><a href=\"https://blog.nobugware.com/post/2018/wasm_go_s2_javascript/\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/9bkgdw/wasm_with_go_to_build_an_s2_cover_map_viewer/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/9bkgdw/wasm_with_go_to_build_an_s2_cover_map_viewer/" (23432 2308) obsolete 14 nil nil ((guid nil "t3_9bkgdw") (author nil (name nil "/u/robteix") (uri nil "https://www.reddit.com/user/robteix")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/robteix\"> /u/robteix </a> <br/> <span><a href=\"https://blog.nobugware.com/post/2018/wasm_go_s2_javascript/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/9bkgdw/wasm_with_go_to_build_an_s2_cover_map_viewer/\">[comments]</a></span>") (id nil "t3_9bkgdw") (link ((href . "https://www.reddit.com/r/golang/comments/9bkgdw/wasm_with_go_to_build_an_s2_cover_map_viewer/"))) (updated nil "2018-08-30T15:11:00+00:00") (title nil "Wasm with Go to build an S2 cover map viewer"))) ("Using Go modules with vendor-provided Protobuf .proto imports?" "<!-- SC_OFF --><div class=\"md\"><p>Without Go modules, we could do this:</p> <pre><code>protoc -I. \\ -I$GOPATH/src \\ -I$GOPATH/src/github.com/google/protobuf/protobuf/src/google/protobuf \\ -- proto/*.proto </code></pre> <p>Then we can import in our <code>api.proto</code> or whatever:</p> <pre><code>syntax = &quot;proto3&quot;; package proto; import &quot;google/protobuf/timestamp.proto&quot;; </code></pre> <p>However, with Go modules, you don't know where <code>github.com/google/protobuf</code>'s <code>.proto</code> files live, since it's something like <code>$GOPATH/pkg/mod/github.com/google/protobuf@3.2.1/...</code>.</p> <p>The only solution I can think of right now is to copy the files from <code>github.com/google/protobuf</code> into a special vendor directory (e.g. <code>proto/vendor</code>) and then use that. This can be done with some scripting that uses <code>go mod download</code>, but its not ideal, because obviously if you upgrade <code>github.com/google/protobuf</code>, you have to do this step manually to sync the files.</p> </div><!-- SC_ON -->   submitted by   <a href=\"https://www.reddit.com/user/lobster_johnson\"> /u/lobster_johnson </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/9blgn0/using_go_modules_with_vendorprovided_protobuf/\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/9blgn0/using_go_modules_with_vendorprovided_protobuf/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/9blgn0/using_go_modules_with_vendorprovided_protobuf/" (23432 9192) obsolete 15 nil nil ((guid nil "t3_9blgn0") (author nil (name nil "/u/lobster_johnson") (uri nil "https://www.reddit.com/user/lobster_johnson")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "<!-- SC_OFF --><div class=\"md\"><p>Without Go modules, we could do this:</p> <pre><code>protoc -I. \\ -I$GOPATH/src \\ -I$GOPATH/src/github.com/google/protobuf/protobuf/src/google/protobuf \\ -- proto/*.proto </code></pre> <p>Then we can import in our <code>api.proto</code> or whatever:</p> <pre><code>syntax = &quot;proto3&quot;; package proto; import &quot;google/protobuf/timestamp.proto&quot;; </code></pre> <p>However, with Go modules, you don&#39;t know where <code>github.com/google/protobuf</code>&#39;s <code>.proto</code> files live, since it&#39;s something like <code>$GOPATH/pkg/mod/github.com/google/protobuf@3.2.1/...</code>.</p> <p>The only solution I can think of right now is to copy the files from <code>github.com/google/protobuf</code> into a special vendor directory (e.g. <code>proto/vendor</code>) and then use that. This can be done with some scripting that uses <code>go mod download</code>, but its not ideal, because obviously if you upgrade <code>github.com/google/protobuf</code>, you have to do this step manually to sync the files.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/lobster_johnson\"> /u/lobster_johnson </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/9blgn0/using_go_modules_with_vendorprovided_protobuf/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/9blgn0/using_go_modules_with_vendorprovided_protobuf/\">[comments]</a></span>") (id nil "t3_9blgn0") (link ((href . "https://www.reddit.com/r/golang/comments/9blgn0/using_go_modules_with_vendorprovided_protobuf/"))) (updated nil "2018-08-30T17:05:44+00:00") (title nil "Using Go modules with vendor-provided Protobuf .proto imports?"))) ("GopherCon 2019 is in San Diego" "submitted by   <a href=\"https://www.reddit.com/user/dgryski\"> /u/dgryski </a> <br/> <span><a href=\"https://twitter.com/dgryski/status/1034939523736600576\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/9be8dq/gophercon_2019_is_in_san_diego/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/9be8dq/gophercon_2019_is_in_san_diego/" (23431 9923) obsolete 16 nil nil ((guid nil "t3_9be8dq") (author nil (name nil "/u/dgryski") (uri nil "https://www.reddit.com/user/dgryski")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/dgryski\"> /u/dgryski </a> <br/> <span><a href=\"https://twitter.com/dgryski/status/1034939523736600576\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/9be8dq/gophercon_2019_is_in_san_diego/\">[comments]</a></span>") (id nil "t3_9be8dq") (link ((href . "https://www.reddit.com/r/golang/comments/9be8dq/gophercon_2019_is_in_san_diego/"))) (updated nil "2018-08-29T23:05:39+00:00") (title nil "GopherCon 2019 is in San Diego"))) ("Easy way to deploy Go binaries to large ephemeral compute servers?" "<!-- SC_OFF --><div class=\"md\"><p>I would like to run calculations on servers with 4-128 CPU cores provided by Amazon or other providers. I only need to run the server for short durations and want to remove it when finished. Are their any CLI or golang tools for automating deploying these kinds of compute tasks?</p> <p>The guides I've found involve <a href=\"https://medium.com/@elmashad/deploying-go-applications-using-docker-on-aws-e6e76e609b49\">manually setting up AWS instances</a>. </p> </div><!-- SC_ON -->   submitted by   <a href=\"https://www.reddit.com/user/Xeoncross\"> /u/Xeoncross </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/9bklhd/easy_way_to_deploy_go_binaries_to_large_ephemeral/\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/9bklhd/easy_way_to_deploy_go_binaries_to_large_ephemeral/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/9bklhd/easy_way_to_deploy_go_binaries_to_large_ephemeral/" (23432 3291) obsolete 17 nil nil ((guid nil "t3_9bklhd") (author nil (name nil "/u/Xeoncross") (uri nil "https://www.reddit.com/user/Xeoncross")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "<!-- SC_OFF --><div class=\"md\"><p>I would like to run calculations on servers with 4-128 CPU cores provided by Amazon or other providers. I only need to run the server for short durations and want to remove it when finished. Are their any CLI or golang tools for automating deploying these kinds of compute tasks?</p> <p>The guides I&#39;ve found involve <a href=\"https://medium.com/@elmashad/deploying-go-applications-using-docker-on-aws-e6e76e609b49\">manually setting up AWS instances</a>. </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Xeoncross\"> /u/Xeoncross </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/9bklhd/easy_way_to_deploy_go_binaries_to_large_ephemeral/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/9bklhd/easy_way_to_deploy_go_binaries_to_large_ephemeral/\">[comments]</a></span>") (id nil "t3_9bklhd") (link ((href . "https://www.reddit.com/r/golang/comments/9bklhd/easy_way_to_deploy_go_binaries_to_large_ephemeral/"))) (updated nil "2018-08-30T15:27:23+00:00") (title nil "Easy way to deploy Go binaries to large ephemeral compute servers?"))) ("Golang Cafe - A Golang-only job board with no recruiters and clear salary ranges" "submitted by   <a href=\"https://www.reddit.com/user/hidiegomariani\"> /u/hidiegomariani </a> <br/> <span><a href=\"https://golang.cafe\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/9bamg1/golang_cafe_a_golangonly_job_board_with_no/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/9bamg1/golang_cafe_a_golangonly_job_board_with_no/" (23430 50385) obsolete 18 nil nil ((guid nil "t3_9bamg1") (author nil (name nil "/u/hidiegomariani") (uri nil "https://www.reddit.com/user/hidiegomariani")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/hidiegomariani\"> /u/hidiegomariani </a> <br/> <span><a href=\"https://golang.cafe\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/9bamg1/golang_cafe_a_golangonly_job_board_with_no/\">[comments]</a></span>") (id nil "t3_9bamg1") (link ((href . "https://www.reddit.com/r/golang/comments/9bamg1/golang_cafe_a_golangonly_job_board_with_no/"))) (updated nil "2018-08-29T16:07:45+00:00") (title nil "Golang Cafe - A Golang-only job board with no recruiters and clear salary ranges"))) ("What The Func? - Query Blocks on Ethereum Using Golang" "submitted by   <a href=\"https://www.reddit.com/user/whatthefunc\"> /u/whatthefunc </a> <br/> <span><a href=\"https://www.what-the-func.com/videos/query-blocks-on-ethereum-using-golang/\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/9blwpx/what_the_func_query_blocks_on_ethereum_using/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/9blwpx/what_the_func_query_blocks_on_ethereum_using/" (23432 12156) obsolete 19 nil nil ((guid nil "t3_9blwpx") (author nil (name nil "/u/whatthefunc") (uri nil "https://www.reddit.com/user/whatthefunc")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/whatthefunc\"> /u/whatthefunc </a> <br/> <span><a href=\"https://www.what-the-func.com/videos/query-blocks-on-ethereum-using-golang/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/9blwpx/what_the_func_query_blocks_on_ethereum_using/\">[comments]</a></span>") (id nil "t3_9blwpx") (link ((href . "https://www.reddit.com/r/golang/comments/9blwpx/what_the_func_query_blocks_on_ethereum_using/"))) (updated nil "2018-08-30T17:55:08+00:00") (title nil "What The Func? - Query Blocks on Ethereum Using Golang"))) ("Project Athens: Microsoft + GopherSource announce proxy server for Go modules" "submitted by   <a href=\"https://www.reddit.com/user/jonfriesenca\"> /u/jonfriesenca </a> <br/> <span><a href=\"https://open.microsoft.com/2018/08/28/announcing-project-athens-gophersource-go-community/?_lrsc=7c3f261e-190a-4020-a66c-63fdcaa21b47\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/9bbyc2/project_athens_microsoft_gophersource_announce/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/9bbyc2/project_athens_microsoft_gophersource_announce/" (23430 59333) obsolete 20 nil nil ((guid nil "t3_9bbyc2") (author nil (name nil "/u/jonfriesenca") (uri nil "https://www.reddit.com/user/jonfriesenca")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/jonfriesenca\"> /u/jonfriesenca </a> <br/> <span><a href=\"https://open.microsoft.com/2018/08/28/announcing-project-athens-gophersource-go-community/?_lrsc=7c3f261e-190a-4020-a66c-63fdcaa21b47\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/9bbyc2/project_athens_microsoft_gophersource_announce/\">[comments]</a></span>") (id nil "t3_9bbyc2") (link ((href . "https://www.reddit.com/r/golang/comments/9bbyc2/project_athens_microsoft_gophersource_announce/"))) (updated nil "2018-08-29T18:36:53+00:00") (title nil "Project Athens: Microsoft + GopherSource announce proxy server for Go modules"))) ("Getting lenght of 2d array?" "<!-- SC_OFF --><div class=\"md\"><p>Why does it print 12 instead of 10, how do i fix it.</p> <p>''func main() {</p> <pre><code>var field [10][12]string fmt.Println(len(field[0])) </code></pre> <p>}''</p> </div><!-- SC_ON -->   submitted by   <a href=\"https://www.reddit.com/user/spoonthefoon\"> /u/spoonthefoon </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/9bl7m0/getting_lenght_of_2d_array/\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/9bl7m0/getting_lenght_of_2d_array/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/9bl7m0/getting_lenght_of_2d_array/" (23432 7492) obsolete 21 nil nil ((guid nil "t3_9bl7m0") (author nil (name nil "/u/spoonthefoon") (uri nil "https://www.reddit.com/user/spoonthefoon")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "<!-- SC_OFF --><div class=\"md\"><p>Why does it print 12 instead of 10, how do i fix it.</p> <p>&#39;&#39;func main() {</p> <pre><code>var field [10][12]string fmt.Println(len(field[0])) </code></pre> <p>}&#39;&#39;</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/spoonthefoon\"> /u/spoonthefoon </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/9bl7m0/getting_lenght_of_2d_array/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/9bl7m0/getting_lenght_of_2d_array/\">[comments]</a></span>") (id nil "t3_9bl7m0") (link ((href . "https://www.reddit.com/r/golang/comments/9bl7m0/getting_lenght_of_2d_array/"))) (updated nil "2018-08-30T16:37:24+00:00") (title nil "Getting lenght of 2d array?"))) ("Stop returning errors in constructors, use imperative functions instead" "<!-- SC_OFF --><div class=\"md\"><p>This thought started growing in my mind after I sought a UUID library for Go. <a href=\"https://github.com/satori/go.uuid\">satori/go.uuid</a> seemed OK to me. All I needed was version 4, and it had what I wanted.</p> <p>To generate a version 4 UUID, I had to run <code>NewV4()</code>, which returned both a UUID and an error. At first I thought that would suffice. But a feeling that something was wrong started bothering me. I think <a href=\"https://golang.org/doc/effective_go.html\">Effective Go</a> made me a little paranoid on following good practices, still I think it's a positive thing.</p> <p>Then I realized that I couldn't find any constructor (<code>New</code> functions) in the <code>stdlib</code> that returned an error. Maybe there are constructors that return errors, but they might be few. One thing I realized though is that imperative functions usually return an error.</p> <p>For example, for the UUID situation, I'd rather write <code>GenerateV4()</code> than <code>NewV4()</code>, as the action of generating a UUID might end up in error, contrary to building a UUID from a constructor. Also, according to Effective Go, constructors exist because <a href=\"https://golang.org/doc/effective_go.html#composite_literals\">&quot;sometimes the zero value isn't good enough and an initializing constructor is necessary&quot;</a>.</p> <p>TLDR/conclusion: EDIT: The idea is don't use <code>New</code> to return errors, but an imperative verb like <code>Open</code>, <code>Create</code> etc. Constructors should return an initialized value only, not also errors. Actions end up in errors, so use imperative functions to try to retrieve a value or throw an error.</p> <p>Edit 1: I know Go &quot;constructors&quot; are not real constructors. They are an initializing constructor, a factory function, whatever. The point is that throughout the <code>stdlib</code> none of these pseudo-constructors return an error. That's the point. Edit 2: The package cited is just an example, I already know it's not suitable. Edit 3: TLDR</p> </div><!-- SC_ON -->   submitted by   <a href=\"https://www.reddit.com/user/gbrlsnchs\"> /u/gbrlsnchs </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/9bkql2/stop_returning_errors_in_constructors_use/\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/9bkql2/stop_returning_errors_in_constructors_use/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/9bkql2/stop_returning_errors_in_constructors_use/" (23432 4273) obsolete 22 nil nil ((guid nil "t3_9bkql2") (author nil (name nil "/u/gbrlsnchs") (uri nil "https://www.reddit.com/user/gbrlsnchs")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "<!-- SC_OFF --><div class=\"md\"><p>This thought started growing in my mind after I sought a UUID library for Go. <a href=\"https://github.com/satori/go.uuid\">satori/go.uuid</a> seemed OK to me. All I needed was version 4, and it had what I wanted.</p> <p>To generate a version 4 UUID, I had to run <code>NewV4()</code>, which returned both a UUID and an error. At first I thought that would suffice. But a feeling that something was wrong started bothering me. I think <a href=\"https://golang.org/doc/effective_go.html\">Effective Go</a> made me a little paranoid on following good practices, still I think it&#39;s a positive thing.</p> <p>Then I realized that I couldn&#39;t find any constructor (<code>New</code> functions) in the <code>stdlib</code> that returned an error. Maybe there are constructors that return errors, but they might be few. One thing I realized though is that imperative functions usually return an error.</p> <p>For example, for the UUID situation, I&#39;d rather write <code>GenerateV4()</code> than <code>NewV4()</code>, as the action of generating a UUID might end up in error, contrary to building a UUID from a constructor. Also, according to Effective Go, constructors exist because <a href=\"https://golang.org/doc/effective_go.html#composite_literals\">&quot;sometimes the zero value isn&#39;t good enough and an initializing constructor is necessary&quot;</a>.</p> <p>TLDR/conclusion: EDIT: The idea is don&#39;t use <code>New</code> to return errors, but an imperative verb like <code>Open</code>, <code>Create</code> etc. Constructors should return an initialized value only, not also errors. Actions end up in errors, so use imperative functions to try to retrieve a value or throw an error.</p> <p>Edit 1: I know Go &quot;constructors&quot; are not real constructors. They are an initializing constructor, a factory function, whatever. The point is that throughout the <code>stdlib</code> none of these pseudo-constructors return an error. That&#39;s the point. Edit 2: The package cited is just an example, I already know it&#39;s not suitable. Edit 3: TLDR</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/gbrlsnchs\"> /u/gbrlsnchs </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/9bkql2/stop_returning_errors_in_constructors_use/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/9bkql2/stop_returning_errors_in_constructors_use/\">[comments]</a></span>") (id nil "t3_9bkql2") (link ((href . "https://www.reddit.com/r/golang/comments/9bkql2/stop_returning_errors_in_constructors_use/"))) (updated nil "2018-08-30T15:43:45+00:00") (title nil "Stop returning errors in constructors, use imperative functions instead"))) ("PGo: a source to source compiler to compile PlusCal into Go/TLA+" "submitted by   <a href=\"https://www.reddit.com/user/ngaut\"> /u/ngaut </a> <br/> <span><a href=\"https://github.com/UBC-NSS/pgo\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/9bfj8f/pgo_a_source_to_source_compiler_to_compile/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/9bfj8f/pgo_a_source_to_source_compiler_to_compile/" (23431 20543) obsolete 23 nil nil ((guid nil "t3_9bfj8f") (author nil (name nil "/u/ngaut") (uri nil "https://www.reddit.com/user/ngaut")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ngaut\"> /u/ngaut </a> <br/> <span><a href=\"https://github.com/UBC-NSS/pgo\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/9bfj8f/pgo_a_source_to_source_compiler_to_compile/\">[comments]</a></span>") (id nil "t3_9bfj8f") (link ((href . "https://www.reddit.com/r/golang/comments/9bfj8f/pgo_a_source_to_source_compiler_to_compile/"))) (updated nil "2018-08-30T02:02:39+00:00") (title nil "PGo: a source to source compiler to compile PlusCal into Go/TLA+"))) ("Gobpf: Go bindings for creating BPF programs" "submitted by   <a href=\"https://www.reddit.com/user/ngaut\"> /u/ngaut </a> <br/> <span><a href=\"https://github.com/iovisor/gobpf/\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/9bfixa/gobpf_go_bindings_for_creating_bpf_programs/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/9bfixa/gobpf_go_bindings_for_creating_bpf_programs/" (23431 20477) obsolete 24 nil nil ((guid nil "t3_9bfixa") (author nil (name nil "/u/ngaut") (uri nil "https://www.reddit.com/user/ngaut")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ngaut\"> /u/ngaut </a> <br/> <span><a href=\"https://github.com/iovisor/gobpf/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/9bfixa/gobpf_go_bindings_for_creating_bpf_programs/\">[comments]</a></span>") (id nil "t3_9bfixa") (link ((href . "https://www.reddit.com/r/golang/comments/9bfixa/gobpf_go_bindings_for_creating_bpf_programs/"))) (updated nil "2018-08-30T02:01:33+00:00") (title nil "Gobpf: Go bindings for creating BPF programs"))) ("Rocket – Automated deployment as fast and easy as possible in Go" "submitted by   <a href=\"https://www.reddit.com/user/z0mbie42_\"> /u/z0mbie42_ </a> <br/> <span><a href=\"https://github.com/astrocorp42/rocket\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/golang/comments/9b8uy7/rocket_automated_deployment_as_fast_and_easy_as/\">[comments]</a></span>" "https://www.reddit.com/r/golang/comments/9b8uy7/rocket_automated_deployment_as_fast_and_easy_as/" (23430 37403) obsolete 25 nil nil ((guid nil "t3_9b8uy7") (author nil (name nil "/u/z0mbie42_") (uri nil "https://www.reddit.com/user/z0mbie42_")) (category ((term . "golang") (label . "r/golang"))) (content ((type . "html")) "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/z0mbie42_\"> /u/z0mbie42_ </a> <br/> <span><a href=\"https://github.com/astrocorp42/rocket\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/9b8uy7/rocket_automated_deployment_as_fast_and_easy_as/\">[comments]</a></span>") (id nil "t3_9b8uy7") (link ((href . "https://www.reddit.com/r/golang/comments/9b8uy7/rocket_automated_deployment_as_fast_and_easy_as/"))) (updated nil "2018-08-29T12:31:23+00:00") (title nil "Rocket – Automated deployment as fast and easy as possible in Go"))) ("[untitled]" nil nil (23433 7172 540585 0) feed 0 nil nil nil))